{"meta":{"title":"Kenryu","subtitle":"hello there.","description":"im testing my firt blog site.","author":"Kenryu","url":"https://kenryu.cc","root":"/"},"pages":[{"title":"关于","date":"2022-07-01T06:26:45.199Z","updated":"2022-07-01T06:26:45.199Z","comments":false,"path":"about/index.html","permalink":"https://kenryu.cc/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2022-07-01T06:24:48.109Z","updated":"2022-07-01T06:24:48.109Z","comments":true,"path":"links/index.html","permalink":"https://kenryu.cc/links/index.html","excerpt":"","text":""}],"posts":[{"title":"LSI Storage Authority (LSA) on Linux","slug":"Storage/LSI_Storage_Authority_(LSA)_on_Linux","date":"2022-06-30T07:55:45.000Z","updated":"2022-06-30T08:44:03.320Z","comments":true,"path":"2022/06/30/Storage/LSI_Storage_Authority_(LSA)_on_Linux/","link":"","permalink":"https://kenryu.cc/2022/06/30/Storage/LSI_Storage_Authority_(LSA)_on_Linux/","excerpt":"","text":"[toc] step0. firewall and selinux12345678firewall-cmd --add-port=2463/tcp --permanentfirewall-cmd --add-port=9000/tcp --permanentfirewall-cmd --reloadfirewall-cmd --list-allsed -i &#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27; /etc/selinux/configreboot step1. From following URL search your HBA controller and download LSA packageshttps://www.broadcom.com/products/storage/raid-controllers 1unzip x.x.x.x_LSA_Linux-x64.zip step2. Download and install OpenSLPhttp://www.openslp.org/download.html 1234567yum groupinstall -y &#x27;Development Tools&#x27;wget https://jaist.dl.sourceforge.net/project/openslp/2.0.0/2.0.0%20Release/openslp-2.0.0.tar.gztar -zxvf openslp-2.0.0.tar.gzcd openslp-2.0.0/./configuremake &amp;&amp; make install/usr/local/sbin/slpd stop step3. Install LSA1234cd x.x.x.x_LSA_Linux-x64/x64/./install.shln -sf /usr/local/lib/libslp.so.1.0.0 /opt/lsi/LSIStorageAuthority/bin/libslp.so.1/etc/init.d/LsiSASH restart Uninstall1/opt/lsi/LSIStorageAuthority/uninstaller.sh","categories":[{"name":"Storage","slug":"Storage","permalink":"https://kenryu.cc/categories/Storage/"}],"tags":[]},{"title":"Make Unix terminal beautiful & productive","slug":"Linux/Make_Unix_terminal_beautiful_&_productive","date":"2022-05-25T04:12:17.000Z","updated":"2022-07-01T01:10:58.403Z","comments":true,"path":"2022/05/25/Linux/Make_Unix_terminal_beautiful_&_productive/","link":"","permalink":"https://kenryu.cc/2022/05/25/Linux/Make_Unix_terminal_beautiful_&_productive/","excerpt":"","text":"First of all, check the activated shell using this command. 1echo $SHELL The below command will display all the available shell. 1cat /etc/shells Install ZSH123dnf -y install zsh# If chsh command no found :dnf -y install util-linux-user change shell1chsh -s $(which zsh) Install Oh-My-ZSH123456sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;# orsh -c &quot;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&quot;# orcurl -Lo install.sh https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh Install powerlevle10k theme123git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/oh-my-zsh/themes/powerlevel10kecho &#x27;source ~/oh-my-zsh/themes/powerlevel10k/powerlevel10k.zsh-theme&#x27; &gt;&gt;~/.zshrc Execute vim .zshrc and modify ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot; https://github.com/romkatv/powerlevel10k#installation Specify Terminal Tab title on ZSHExecute vim .zshrc add following. 12345678910111213141516171819# Uncomment the following line to disable auto-setting terminal title.DISABLE_AUTO_TITLE=&quot;true&quot;# To display Hostname😎PWD_Name as title textHOSTNAME=$(hostname -s)# Let zsh launch with the custom title.window_title=&quot;\\033]0;$HOSTNAME😎$&#123;PWD##*/&#125;\\007&quot;echo -ne &quot;$window_title&quot;# Refresh the custome title when the directory changes. Changed from precmd as it shall suppress the set-title function belowfunction chpwd () &#123;window_title=&quot;\\033]0;$HOSTNAME😎$&#123;PWD##*/&#125;\\007&quot;echo -ne &quot;$window_title&quot;&#125;# Setting your own title text on demand. (Don&#x27;t change dir after setting it 😎)function set-title()&#123;TITLE=&quot;\\[\\e]2;$*\\a\\]&quot;echo -e $&#123;TITLE&#125;&#125;","categories":[{"name":"Linux","slug":"Linux","permalink":"https://kenryu.cc/categories/Linux/"}],"tags":[]},{"title":"Windows11 の「Num Lock」キーを無効化","slug":"Windows/Windows11_の「Num_Lock」キーを無効化","date":"2022-05-20T08:02:05.000Z","updated":"2022-07-01T04:45:16.889Z","comments":true,"path":"2022/05/20/Windows/Windows11_の「Num_Lock」キーを無効化/","link":"","permalink":"https://kenryu.cc/2022/05/20/Windows/Windows11_%E3%81%AE%E3%80%8CNum_Lock%E3%80%8D%E3%82%AD%E3%83%BC%E3%82%92%E7%84%A1%E5%8A%B9%E5%8C%96/","excerpt":"","text":"課題ネットワークエンジニアはIPアドレスの入力するなどにテンキーを重宝します。しかし、タイピングするときに間違えてNum Lockキーを押してしまったら、次に数字を打ちたいのにカーソルが操作されてしまい、若干苛立たしくなるのではないでしょうか？生産性にはともかく、心身の健康にも悪影響を及ぼします。 ところで、今回は、Num Lockキーを半永久的に無効化する方法をご紹介致したいと思います。 【永久的】：物理的にキーボードから「Num Lock」キーを取り外し 解決方法 Win+Rを同時に押して、regedit と入力し、「レジストリ エディター」を開きます。 アドレスバーにコンピューター\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layoutと入力します。 新しいバイナリエディタScancode Map ダブルチェックして以下のように編集します。 注意：Num Lockロックしているかをご確認ください。 再起動して完了です。","categories":[{"name":"Windows","slug":"Windows","permalink":"https://kenryu.cc/categories/Windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://kenryu.cc/tags/windows/"}]},{"title":"Postfix Dovecot MySQL Mail Server","slug":"Linux/Mail-Server/Postfix-Dovecot-MySQL-Mail-Server","date":"2022-05-01T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2022/05/02/Linux/Mail-Server/Postfix-Dovecot-MySQL-Mail-Server/","link":"","permalink":"https://kenryu.cc/2022/05/02/Linux/Mail-Server/Postfix-Dovecot-MySQL-Mail-Server/","excerpt":"","text":"Objective Local network (web)mail server. Local private PKI. On LNMP-base use Postfix &amp; Dovecot &amp; PostfixAdmin &amp; RoundCube. Name Version Command Linux Rocky Linux release 8.5 (Green Obsidian) cat &#x2F;etc&#x2F;centos-release &#x2F;etc&#x2F;os-release &#x2F;etc&#x2F;redhat-release &#x2F;etc&#x2F;rocky-release &#x2F;etc&#x2F;system-release Nginx nginx version: nginx&#x2F;1.20.2 nginx -v MySQL mysql Ver 8.0.28 for Linux on x86_64 (MySQL Community Server - GPL) mysql –version PHP PHP 7.4.29 (fpm-fcgi) (built: Apr 12 2022 10:55:38) php -v Postfix mail_version &#x3D; 3.5.8 postconf mail_version Dovecot 2.3.8 (9df20d2db) dovecot –version PostfixAdmin 3.3.11 Roundcube 1.5.2 Prerequisites Have a host with CPU more than 1Core and Memory higher than 2GB. Have an LNMP-Base or LAMP-Base host; Have an FQDN that can be resolved; Have private CA root certificate, Host’s private key, Host’s certificate; free command 1234# free -htotal used free shared buff/cache availableMem: 1.9Gi 624Mi 746Mi 20Mi 606Mi 1.2GiSwap: 2.0Gi 0B 2.0Gi DNS Record on name server: 12mail.example.com. IN A 192.168.65.132132.65 IN PTR mail.example.com. SSL&#x2F;TSL’s private key and certificate file is following path : 12345[root@email ~]# ll /etc/pki/tls/certs/mail.example.com.crt-r--r--r-- 1 root root 5439 Apr 23 16:41 /etc/pki/tls/certs/mail.example.com.crt[root@email ~]#[root@email ~]# ll /etc/pki/tls/private/mail.example.com.key-r-------- 1 root root 1704 Apr 23 16:41 /etc/pki/tls/private/mail.example.com.key Step1. OS SettingSetting hostname. 12# dnf -y update# hostnamectl set-hostname mail.example.com 123# vim /etc/hosts127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 mail.example.com::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 mail.example.com Disable SELinux 12# sed -i s/^SELINUX=.*$/SELINUX=disabled/ /etc/selinux/config# reboot Allow the following packages to pass though the firewall. 123# firewall-cmd --permanent --add-service=&#123;http,https,smtp,smtp-submission,smtps,imap,imaps,pop3,pop3s&#125;# firewall-cmd --reload# firewall-cmd --list-all Install some required packages and recommended PHP modules. 12# dnf -y install vim wget tar git nmap bind-utils telnet mailx openssl# dnf -y install php php-fpm php-imap php-mbstring php-mysqlnd php-gd php-opcache php-json php-curl php-zip php-xml php-bz2 php-intl php-gmp Step2. Create DatabasesCreate a database for PostfixAdmin. 1234mysql&gt; CREATE DATABASE postfixadmin;mysql&gt; CREATE USER &#x27;postfixadmin&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;YourPassword&#x27;;mysql&gt; GRANT ALL PRIVILEGES ON `postfixadmin` . _config.landscape.yml _config.yml db.json Get_Joplin_resources.sh i18n Install_JavaScripts_via_npm.sh node_modules package.json package-lock.json public scaffolds source symlink.sh test.md themes tmp.md TO &#x27;postfixadmin&#x27;@&#x27;localhost&#x27;;mysql&gt; FLUSH PRIVILEGES; Create a database for roundcubu. 1234mysql&gt; CREATE DATABASE roundcube DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;mysql&gt; CREATE USER roundcube@localhost IDENTIFIED BY &#x27;YourPassword&#x27;;mysql&gt; GRANT ALL PRIVILEGES ON roundcube.* TO roundcube@localhost;mysql&gt; FLUSH PRIVILEGES; Step3. Create Web ServersCreate Nginx config file for PostfixAdmin and RoundCube. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475# cat /etc/nginx/conf.d/mail.example.com.conf# Redirect http to https.server &#123;listen 80;listen [::]:80;server_name mail.example.com, 192.168.65.132;return 301 https://mail.example.com$request_uri;&#125;# Listen https://mail.example.comserver &#123;listen 443 ssl http2;server_name mail.example.com;# SSl/TLS configurationssl_certificate &quot;/etc/pki/tls/certs/mail.example.com.crt&quot;;ssl_certificate_key &quot;/etc/pki/tls/private/mail.example.com.key&quot;;ssl_session_cache shared:SSL:1m;ssl_session_timeout 10m;ssl_ciphers PROFILE=SYSTEM;ssl_prefer_server_ciphers on;# Roundcube configurationroot /usr/share/nginx/roundcube/;index index.php index.html index.htm;# Roundcube logserror_log /var/log/nginx/roundcube.error;access_log /var/log/nginx/roundcube.access;# Roundcube Locationslocation / &#123;try_files $uri $uri/ /index.php;&#125;location ~ .php$ &#123;try_files $uri =404;fastcgi_pass unix:/run/php-fpm/www.sock;fastcgi_index index.php;fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;include fastcgi_params;&#125;location ~ /.well-known/acme-challenge &#123;allow all;&#125;location ~ ^/(README|INSTALL|LICENSE|CHANGELOG|UPGRADING)$ &#123;deny all;&#125;location ~ ^/(bin|SQL)/ &#123;deny all;&#125;# Sub-Location of PostfixAdminlocation /postfixadmin &#123;alias /usr/share/nginx/postfixadmin/public;access_log /var/log/nginx/postfixadmin_access.log;error_log /var/log/nginx/postfixadmin_error.log;try_files $uri $uri/ /index.php;location ~ ^/(.+.php)$ &#123;try_files $uri =404;fastcgi_pass unix:/run/php-fpm/www.sock;fastcgi_index index.php;fastcgi_param SCRIPT_FILENAME $request_filename;include /etc/nginx/fastcgi_params;&#125;&#125;# A long browser cache lifetime can speed up repeat visits to your page# location ~* .(jpg|jpeg|gif|png|webp|svg|woff|woff2|ttf|css|js|ico|xml)$ &#123;# access_log off;# log_not_found off;# expires 360d;# &#125;&#125; Step4. Configure PostfixInstall and start Postfix. 12# dnf -y install postfix postfix-mysql# systemctl enable --now postfix Edit Postfix main config file with following command. This will defined our domain hostname tls_level etc… 12# cp /etc/postfix/main.cf /etc/postfix/main.cf.bak# vim /etc/postfix/main.cf main.cf We can configure postfix by direct modifying above file or use following postconf command. 12345678910Change to:# postconf -e &quot;inet_interfaces = all&quot;# postconf -e &#x27;inet_protocols = ipv4&#x27;# postconf &#x27;smtpd_tls_cert_file = /etc/pki/tls/certs/mail.example.com.crt&#x27;# postconf &#x27;smtpd_tls_key_file = /etc/pki/tls/private/mail.example.com.key&#x27;Add:# postconf -e &#x27;smtp_address_preference = ipv4&#x27;# postconf &quot;smtpd_tls_loglevel = 1&quot;# postconf &quot;smtp_tls_loglevel = 1&quot; 123456789101112131415161718192021222324#Add following to the end of the file.# Force TLSv1.3 or TLSv1.2smtpd_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1smtp_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1smtp_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1mailbox_transport = lmtp:unix:private/dovecot-lmtpsmtputf8_enable = novirtual_mailbox_domains = proxy:mysql:/etc/postfix/sql/mysql_virtual_domains_maps.cfvirtual_mailbox_maps =proxy:mysql:/etc/postfix/sql/mysql_virtual_mailbox_maps.cf,proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_domain_mailbox_maps.cfvirtual_alias_maps =proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_maps.cf,proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_domain_maps.cf,proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_domain_catchall_maps.cfvirtual_transport = lmtp:unix:private/dovecot-lmtpvirtual_mailbox_base = /var/vmailvirtual_minimum_uid = 2000virtual_uid_maps = static:2000virtual_gid_maps = static:2000 Enable Submssion port (587) and SMTP-S (465) by editting /etc/postfix/master.cf file. 12# cp /etc/postfix/master.cf /etc/postfix/master.cf.bak# vim /etc/postfix/master.cf master.cf 1234567891011121314151617181920# For Submissionsubmission inet n - y - - smtpd-o syslog_name=postfix/submission-o smtpd_tls_security_level=encrypt-o smtpd_tls_wrappermode=no-o smtpd_sasl_auth_enable=yes-o smtpd_relay_restrictions=permit_sasl_authenticated,reject-o smtpd_recipient_restrictions=permit_mynetworks,permit_sasl_authenticated,reject-o smtpd_sasl_type=dovecot-o smtpd_sasl_path=private/auth# For SMTP-Ssmtps inet n - y - - smtpd-o syslog_name=postfix/smtps-o smtpd_tls_wrappermode=yes-o smtpd_sasl_auth_enable=yes-o smtpd_relay_restrictions=permit_sasl_authenticated,reject-o smtpd_recipient_restrictions=permit_mynetworks,permit_sasl_authenticated,reject-o smtpd_sasl_type=dovecot-o smtpd_sasl_path=private/auth (Option) We can follow the steps below to create a watchdog to prevent the service from terminating unexpectedly. 12345# mkdir -p /etc/systemd/system/postfix.service.d/# vim /etc/systemd/system/postfix.service.d/restart.conf[Service]Restart=on-failureRestartSec=5s (Option) Verify the watchdog is working. 123# systemctl daemon-reload# pkill master# systemctl status postfix Step5. Configure Dovecot12# dnf -y install dovecot dovecot-mysql# systemctl enable --now dovecot Add the dovecot to the mail group. 1# gpasswd -a dovecot mail Add the web server(nginx) to the dovecot group. 1# gpasswd -a nginx dovecot Generating DH parameters, This is going to take a long time. 1# openssl dhparam -out /etc/dovecot/dh.pem 4096 Uncomment following line and remove submission because we have enabled submission using Postfix. 1234# cp /etc/dovecot/dovecot.conf /etc/dovecot/dovecot.conf.bak# vim /etc/dovecot/dovecot.conf#protocols = imap pop3 lmtp submissionprotocols = imap pop3 lmtp Create new file and fill in the following. This will enable Dovecot to connect to our MySQL database. 1# vim /etc/dovecot/dovecot-sql.conf.ext 123456driver = mysqlconnect = host=localhost dbname=postfixadmin user=postfixadmin password=YourPassworddefault_pass_scheme = SHA512password_query = SELECT username AS user,password FROM mailbox WHERE username = &#x27;%u&#x27; AND active=&#x27;1&#x27;user_query = SELECT maildir, 2000 AS uid, 2000 AS gid FROM mailbox WHERE username = &#x27;%u&#x27; AND active=&#x27;1&#x27;iterate_query = SELECT username AS user FROM mailbox Modify the file as below. This will define the mail location as well as the namespace. 12345# vim /etc/dovecot/conf.d/10-mail.conf# Add following in the end.mail_location = maildir:~/Maildirmail_home = /var/vmail/%d/%nmail_privileged_group = mail Add the following lines to the end of this file. 12# cp /etc/dovecot/conf.d/10-master.conf /etc/dovecot/conf.d/10-master.conf.bak# vim /etc/dovecot/conf.d/10-master.conf 12345678910111213#Add following in the end of the file.service stats &#123;unix_listener stats-reader &#123;user = nginxgroup = nginxmode = 0660&#125;unix_listener stats-writer &#123;user = nginxgroup = nginxmode = 0660&#125;&#125; Configuring Authentication Mechanism. 12345678# cp /etc/dovecot/conf.d/10-auth.conf /etc/dovecot/conf.d/10-auth.conf.bak# vim /etc/dovecot/conf.d/10-auth.conf#Change to:auth_username_format = %uauth_mechanisms = plain login!include auth-sql.conf.extauth_debug = yesauth_debug_passwords = yes Configuring SSL&#x2F;TLS Encryption. 12345678910# cp /etc/dovecot/conf.d/10-ssl.conf /etc/dovecot/conf.d/10-ssl.conf.bak# vim /etc/dovecot/conf.d/10-ssl.conf#Change to:ssl = requiredssl_cert = &lt;/etc/pki/tls/certs/mail.example.com.crtssl_key = &lt;/etc/pki/tls/private/mail.example.com.keyssl_dh = &lt;/etc/dovecot/dh.pemssl_min_protocol = TLSv1.2ssl_cipher_list = PROFILE=SYSTEMssl_prefer_server_ciphers = yes SASL Authentication Between Postfix and Dovecot. 12345678910111213141516# vim /etc/dovecot/conf.d/10-master.conf# Change to:service lmtp &#123;unix_listener /var/spool/postfix/private/dovecot-lmtp &#123;mode = 0600user = postfixgroup = postfix&#125;&#125;service auth &#123;unix_listener /var/spool/postfix/private/auth &#123;mode = 0600user = postfixgroup = postfix&#125;&#125; Edit the following file like below. This will auto-create Sent ,Junk, Draftsand Trash Folder. 123456789101112131415161718192021222324# cp /etc/dovecot/conf.d/15-mailboxes.conf /etc/dovecot/conf.d/15-mailboxes.conf.bak# vim /etc/dovecot/conf.d/15-mailboxes.confnamespace inbox &#123;# These mailboxes are widely used and could perhaps be created automatically:mailbox Drafts &#123;auto = createspecial_use = Drafts&#125;mailbox Junk &#123;auto = createspecial_use = Junk&#125;mailbox Trash &#123;auto = createspecial_use = Trash&#125;mailbox Sent &#123;auto = createspecial_use = Sent&#125;mailbox &quot;Sent Messages&quot; &#123;special_use = Sent&#125;&#125; Now we need to restart the Postfix and dovecot services. 123# systemctl restart postfix dovecot# systemctl status postfix# systemctl status dovecot Step6. Configure PostfixadminCheck https://github.com/postfixadmin/postfixadmin/releases to get the latest stable release first. And then we need to download the tarball via wget command. 1234# wget https://github.com/postfixadmin/postfixadmin/archive/postfixadmin-3.3.11.tar.gz# tar -zxvf postfixadmin-3.3.11.tar.gz# mv postfixadmin-postfixadmin-3.3.11/ /usr/share/nginx/postfixadmin# mkdir -p /usr/share/nginx/postfixadmin/templates_c Create the following new file and fill it like below. This will enable PostfixAdmin connect MySQL database and update password by PHP. 123456789101112# vim /usr/share/nginx/postfixadmin/config.local.php&lt;?php$CONF[&#x27;configured&#x27;] = true;$CONF[&#x27;database_type&#x27;] = &#x27;mysqli&#x27;;$CONF[&#x27;database_host&#x27;] = &#x27;localhost&#x27;;$CONF[&#x27;database_port&#x27;] = &#x27;3306&#x27;;$CONF[&#x27;database_user&#x27;] = &#x27;postfixadmin&#x27;;$CONF[&#x27;database_password&#x27;] = &#x27;YourPassword&#x27;;$CONF[&#x27;database_name&#x27;] = &#x27;postfixadmin&#x27;;$CONF[&#x27;encrypt&#x27;] = &#x27;dovecot:SHA512&#x27;;$CONF[&#x27;dovecotpw&#x27;] = &quot;/usr/bin/doveadm pw -r 12&quot;;?&gt; 1# chown -R nginx:nginx /usr/share/nginx/postfixadmin/ Make following directory. 1# mkdir -p /etc/postfix/sql/ Create following files and make sure they are set with permissions to be accessible by Postfix user. 12345678910# vim /etc/postfix/sql/mysql_virtual_domains_maps.cfuser = postfixadminpassword = YourPasswordhosts = localhostdbname = postfixadminquery = SELECT domain FROM domain WHERE domain=&#x27;%s&#x27; AND active = &#x27;1&#x27;#query = SELECT domain FROM domain WHERE domain=&#x27;%s&#x27;#optional query to use when relaying for backup MX#query = SELECT domain FROM domain WHERE domain=&#x27;%s&#x27; AND backupmx = &#x27;0&#x27; AND active = &#x27;1&#x27;#expansion_limit = 100 1234567# vim /etc/postfix/sql/mysql_virtual_mailbox_maps.cfuser = postfixadminpassword = YourPasswordhosts = localhostdbname = postfixadminquery = SELECT maildir FROM mailbox WHERE username=&#x27;%s&#x27; AND active = &#x27;1&#x27;#expansion_limit = 100 123456# vim /etc/postfix/sql/mysql_virtual_alias_domain_mailbox_maps.cfuser = postfixadminpassword = YourPasswordhosts = localhostdbname = postfixadminquery = SELECT maildir FROM mailbox,alias_domain WHERE alias_domain.alias_domain = &#x27;%d&#x27; and mailbox.username = CONCAT(&#x27;%u&#x27;, &#x27;@&#x27;, alias_domain.target_domain) AND mailbox.active = 1 AND alias_domain.active=&#x27;1&#x27; 1234567# vim /etc/postfix/sql/mysql_virtual_alias_maps.cfuser = postfixadminpassword = YourPasswordhosts = localhostdbname = postfixadminquery = SELECT goto FROM alias WHERE address=&#x27;%s&#x27; AND active = &#x27;1&#x27;#expansion_limit = 100 123456# vim /etc/postfix/sql/mysql_virtual_alias_domain_maps.cfuser = postfixadminpassword = YourPasswordhosts = localhostdbname = postfixadminquery = SELECT goto FROM alias,alias_domain WHERE alias_domain.alias_domain = &#x27;%d&#x27; and alias.address = CONCAT(&#x27;%u&#x27;, &#x27;@&#x27;, alias_domain.target_domain) AND alias.active = 1 AND alias_domain.active=&#x27;1&#x27; 123456# vim /etc/postfix/sql/mysql_virtual_alias_domain_catchall_maps.cfuser = postfixadminpassword = YourPasswordhosts = localhostdbname = postfixadminquery = SELECT goto FROM alias,alias_domain WHERE alias_domain.alias_domain = &#x27;%d&#x27; and alias.address = CONCAT(&#x27;@&#x27;, alias_domain.target_domain) AND alias.active = 1 AND alias_domain.active=&#x27;1&#x27; 1# chmod 0640 /etc/postfix/sql/* 123456789# adduser vmail --system --uid 2000 --user-group --no-create-home# mkdir /var/vmail/# chown vmail:vmail /var/vmail/ -R# chown -R postfix:postfix /etc/postfix/sql/# chown -R nginx:nginx /var/lib/php/opcache/# chown -R nginx:nginx /var/lib/php/session/# chown -R nginx:nginx /var/lib/php/wsdlcache/# chown nginx:nginx /etc/pki/tls/certs/mail.example.com.crt# chown nginx:nginx /etc/pki/tls/private/mail.example.com.key 12# nginx -t# nginx -s reload Open our browser and enter following URL to complete PostfixAdmin setup.https://mail.example.com/postfixadmin/setup.phpYou can generate a password hash through php -r &#39;echo password_hash(&quot;YourPassword&quot;, PASSWORD_DEFAULT);&#39; command.Now you need to add following line to the /usr/share/nginx/postfixadmin/config.local.php file in the end. 1$CONF[&#x27;setup_password&#x27;] = &#x27;Your_Password&#x27;s_Hash&#x27;; Follow the setup wizard to create an Administrator user and login.Now you can create Domain and Mailboxes in PostfixAdmin. Reference:https://github.com/postfixadmin/postfixadmin/tree/master/DOCUMENTShttps://raw.githubusercontent.com/postfixadmin/postfixadmin/master/INSTALL.TXT Step7. Configure RoundCubeRoundCube is a WebGUI IMAP client.Download Roundcube Webmail from https://github.com/roundcube/roundcubemail/releases 12345# wget https://github.com/roundcube/roundcubemail/releases/download/1.5.2/roundcubemail-1.5.2-complete.tar.gz# tar -zxvf roundcubemail-1.5.2-complete.tar.gz# mv roundcubemail-1.5.2 /usr/share/nginx/roundcube# chown nginx:nginx -R /usr/share/nginx/roundcube/# dnf install php-ldap php-imagick php-common php-gd php-imap php-json php-curl php-zip php-xml php-mbstring php-bz2 php-intl php-gmp -y Add your Private CA’s certificate in the end of the following file. Note: This needs to be saved forcibly with :wq!. 12345678# vim /etc/pki/tls/certs/ca-bundle.crt#Add the following to the end of the file.# My Private CA Certificate.-----BEGIN CERTIFICATE-----...Your CA certificate....-----END CERTIFICATE----- Now you need to open your browser and enter following URL to continue RoundCube setup.https://email.example.com/installer Fill Database setup.Fill IMAP setup.IMAP server: ssl://email.example.com port: 993SMTP server: tls://email.example.com port: 587SMTP server: ssl://email.example.com port: 465Next, you can scroll down to the Plugins section to enable some plugins. For example: the password plugin, mark as junk plugin and so on. I enabled all of them.Make sure the password plugin in the plugin list at the end of this file. The plugin order doesn’t matter. 1# grep &#x27;password&#x27; /usr/share/nginx/roundcube/config/config.inc.php Create the new PHP file by copying the file below and modify it like following. This will enable RoundCube to connect our MySQL database and update password. 12# cp /usr/share/nginx/roundcube/plugins/password/config.inc.php.dist /usr/share/nginx/roundcube/plugins/password/config.inc.phpvim /usr/share/nginx/roundcube/plugins/password/config.inc.php 123456789#Change the value to:$config[&#x27;password_db_dsn&#x27;] = &#x27;mysql://postfixadmin:YourPassword@127.0.0.1/postfixadmin&#x27;;$config[&#x27;password_query&#x27;] = &#x27;UPDATE mailbox SET password=%D,modified=NOW() WHERE username=%u&#x27;;$config[&#x27;password_strength_driver&#x27;] = &#x27;zxcvbn&#x27;;$config[&#x27;password_zxcvbn_min_score&#x27;] = 5;$config[&#x27;password_algorithm&#x27;] = &#x27;dovecot&#x27;;$config[&#x27;password_dovecotpw&#x27;] = &#x27;/usr/bin/doveadm pw -r 12&#x27;;$config[&#x27;password_dovecotpw_method&#x27;] = &#x27;SHA512&#x27;;$config[&#x27;password_dovecotpw_with_method&#x27;] = true; config.inc.php 123# chown nginx:nginx /usr/share/nginx/roundcube/plugins/password/config.inc.php# chmod 600 /usr/share/nginx/roundcube/plugins/password/config.inc.php# echo &quot;$config[&#x27;enable_installer&#x27;] = true;&quot; &gt;&gt; /usr/share/nginx/roundcube/config/config.inc.php Close the browser and enter following URL to complete set up.https://email.example.com/installer/index.php?_step=3Send testLogin testAfter completing the installation and the final tests please remove the whole installer folder from the document root of the webserver or make sure that enable_installer option in config.inc.php is disabled. 1234# rm -rf /usr/share/nginx/roundcube/installer/vim /usr/share/nginx/roundcube/config/config.inc.phpChange to:$config[&#x27;enable_installer&#x27;]=false; 12# nginx -t# nginx -s reload Close the browser and enter following URL to login your account.https://mail.example.com/postfixadmin/setup.phphttps://mail.example.com Reference:https://www.linuxbabe.com/redhat/postfixadmin-create-virtual-mailboxes-centos-mail-serverhttps://www.linuxbabe.com/redhat/install-roundcube-webmail-centos-8-rhel-8-apache-nginx#out-of-office TroubleShootingPerform a user lookup in Dovecot’s userdbs. 1# doveadm user &#x27;*&#x27; 12345# journalctl -eu dovecot# vim /var/log/maillog# mail user@gmail.com# vim /etc/aliases# newaliases","categories":[{"name":"Linux","slug":"Linux","permalink":"https://kenryu.cc/categories/Linux/"}],"tags":[{"name":"Server","slug":"Server","permalink":"https://kenryu.cc/tags/Server/"},{"name":"Nginx","slug":"Nginx","permalink":"https://kenryu.cc/tags/Nginx/"},{"name":"MySQL","slug":"MySQL","permalink":"https://kenryu.cc/tags/MySQL/"},{"name":"PHP","slug":"PHP","permalink":"https://kenryu.cc/tags/PHP/"}]},{"title":"ZFS常用命令","slug":"ZFS/ZFS常用命令","date":"2022-02-28T06:52:32.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2022/02/28/ZFS/ZFS常用命令/","link":"","permalink":"https://kenryu.cc/2022/02/28/ZFS/ZFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"1. 创建pool和ZFS文件系统 创建名为 “tank” 的存储池 (type: ,mirror,raidz,raidz2,raidz3) 1# zpool create tank &lt;type&gt; sdb sdc sdd sde 注意： Linux的大多数情况下，sda，sdb，sdc并没有按照slot的顺序排列，是乱序的。 1find -L /dev/disk/by-id -samefile /dev/sda 向池中添加更多空间 池(pool)中的其他空间(vdev)要相同type，相同数量。否则出现”mismatched replication level”错误。 1# zpool add tank mirror sdf sdg 创建文件系统，挂载在 &#x2F;export&#x2F;home 下 123# zfs create tank/home# df -Th# zfs set mountpoint=/export/home tank/home 为多个用户创建起始目录t&gt; 请注意：由于继承而自动挂载在 &#x2F;export&#x2F;home&#x2F;{ahrens,bonwick,billm} 下 123# zfs create tank/home/ahrens# zfs create tank/home/bonwick# zfs create tank/home/billm 修改文件系统名称 1# zfs rename tank/home/ahrens tank/home/nahrens 删除文件系统 1# zfs destroy -Rf tank/fs 修改存储池的名称 123# zpool export tank# zpool import tank newpool 2. 设置属性 自动以 NFS 方式共享该文件系统1# zfs set sharenfs=rw tank/home 对文件系统中所有数据启用压缩1# zfs set compression=on tank 将用户 A的最大空间限制为 10g1# zfs set quota=10g tank/home/userA 保证用户 B有 20g 的预留空间1# zfs set reservation=20g tank/home/userB 可通过命令查询文件系统的所有属性1# zfs get all tank/home 可通过命令查询存储池的所有属性1# zpool get all tank 大多数属性可通过继承方式自动设置 1# zfs inherit &lt;property&gt; tank/home/eschrock 3. ZFS snapshot 文件系统的只读副本即时创建、数量不限,不占用额外空间 - 块仅在发生更改时才会被复制可通过每个文件系统根目录下的 .zfs&#x2F;snapshot 访问使用户可在没有系统管理员介入的情况下恢复文件对用户Ａ 的起始目录执行快照捕获1# zfs snapshot tank/home/usera@tuesday 回滚到前一个快照1# zfs rollback tank/home/usera@monday 查看星期三的 foo.c 版本1$ cat /tank/home/usera/.zfs/snapshot/wednesday/foo.c 删除快照1# zfs destroy -R tank/home/usera@monday 4. ZFS Clone 快照的可写副本即时创建、数量不限存储大部分为共享数据的众多专用副本的理想方法软件安装工作区无盘客户机 创建 OpenSolaris 源代码的克隆 1# zfs clone tank/solaris@monday tank/ws/lori/fix 5. ZFS send&#x2F;receive 基于快照点完整备份：任何快照增量备份：任何快照增量速度很快 - 开销与更改的数据成比例非常高效，可执行远程复制 生成完整备份 1# zfs send tank/fs@A &gt;/backup/A 生成增量备份 1# zfs send -i tank/fs@A tank/fs@B &gt;/backup/B-A 远程复制：每分钟发送一次增量 1# zfs send -i tank/fs@11:31 tank/fs@11:32 | ssh host zfs receive -d /tank/fs 6. ZFS 数据迁移 独立于主机的磁盘格式将服务器从 x86 更改为 SPARC，也能运行自适应字节存储顺序 (Adaptive endianness)：在两个平台上都无需额外成本写入总是使用本地字节存储顺序 (native endianness)，在块指针中设置位仅当主机字节存储顺序 (endianness) !&#x3D; 块字节存储顺序时，才会针对读取进行字节交换 ZFS 负责所有处理无需考虑设备路径、配置文件、&#x2F;etc&#x2F;vfstab 等等ZFS 会在必要时进行共享&#x2F;取消共享、挂载&#x2F;取消挂载等等 从旧服务器上导出池tank 1old# zpool export tank 物理移动磁盘并将池导入到新服务器中 1new# zpool import tank 7. 设备管理 添加&#x2F;替换新设备 (type: ,mirror,raidz,raidz2,raidz3) 123# zpool add tank &lt;type&gt; c0t2d0 c0t3d0 c0t4d0# zpool replace tank c0t1d0 c0t2d0 添加&#x2F;移除镜像设备 12# zpool attach tank c0t1d0 c0t2d0# zpool detach tank c0t2d0 将设备停止或手工启动 12# zpool offline tank c0t2d0# zpool online tank c0t2d0 查看存储池当前状态和 I&#x2F;O 状况 12# zpool status -v tank# zpool iostat tank 1 添加热备设备 1# zpool add tank spare c0t2d0 指定热备启动&#x2F;停止热备 12# zpool replace tank c0t1d0 c0t2d0# zpool detach tank c0t2d0 将热备设备删除 1# zpool remove tank c0t2d0 添加&#x2F;删除独立的日志设备（性能改善） 12# zpool add tank log c0t3d0# zpool remove tank c0t3d0 8. ZFS 权限管理 可以将zfs(1M) 的管理权限分派给普通用户 12 &#x27;zfs allow&#x27; &#x27;zfs unallow&#x27; 将权限授予一个普通用户 1# zfs allow marks create,snapshot tank/marks 将指定权限回收 1# zfs unallow marks create,snapshot tank/marks 查看文件系统当前的权限 1# zfs allow tank/marks 9. 其它命令 显示存储池所有操作历史记录1# zpool history tank 升级存储池到指定 SPA 版本1# zpool upgrade -V &lt;version&gt; tank 升级文件系统到指定 ZPL 版本1# zfs upgrade -V &lt;version&gt; tank/fs 手工挂载&#x2F;卸载文件系统123# zfs mount -a# zfs unmount tank/fs# zfs unmount -a 参考 ZFS常用命令","categories":[{"name":"ZFS","slug":"ZFS","permalink":"https://kenryu.cc/categories/ZFS/"}],"tags":[{"name":"Server","slug":"Server","permalink":"https://kenryu.cc/tags/Server/"},{"name":"ZFS","slug":"ZFS","permalink":"https://kenryu.cc/tags/ZFS/"},{"name":"Storage","slug":"Storage","permalink":"https://kenryu.cc/tags/Storage/"}]},{"title":"Setup WebDAV server (Apache)","slug":"File_Sharing_Servers/Setup_WebDAV_server__Apache_","date":"2021-12-15T12:17:52.000Z","updated":"2022-06-30T00:45:55.810Z","comments":true,"path":"2021/12/15/File_Sharing_Servers/Setup_WebDAV_server__Apache_/","link":"","permalink":"https://kenryu.cc/2021/12/15/File_Sharing_Servers/Setup_WebDAV_server__Apache_/","excerpt":"","text":"Premise Installed Apache . Installed SSL&#x2F;TLS server Private key &amp; Certificate. Disabled SELinux. Allowed Firewall. Enviroment1234567[root@rhel8 ~]# cat /etc/redhat-releaseRed Hat Enterprise Linux release 8.5 (Ootpa)[root@rhel8 ~]# httpd -vServer version: Apache/2.4.37 (Red Hat Enterprise Linux)Server built: Oct 26 2021 14:18:06[root@rhel8 ~]# smbstatus --versionVersion 4.14.5 Make Share Folder123mkdir -p /sharechmod -R 775 /sharechown -R apache. /share Configure WebDAVCreate new config file follwing:1234567891011121314151617181920vim /etc/httpd/conf.d/webdav.conf# create new&lt;IfModule mod_dav_fs.c&gt;DAVLockDB /var/lib/dav/lockdb&lt;/IfModule&gt;Alias /share /share&lt;Location /share&gt;DAV OnSSLRequireSSLOptions NoneAuthType BasicAuthName WebDAVAuthUserFile /etc/httpd/conf/.htpasswd&lt;RequireAny&gt;Require method GET POST OPTIONSRequire valid-user&lt;/RequireAny&gt;&lt;/Location&gt; Create WebDAV User Note: This user is not your operating system’s user. 1234htpasswd -c /etc/httpd/conf/.htpasswd &lt;InputYourUserName&gt;New password: &lt;InputYourPassword&gt;Re-type new password: &lt;InputYourPassword&gt;Adding password for user &lt;HereIsYourUserName&gt; (Optional) Edit Apache run userIt doesn’t work. 1234567vim /etc/httpd/conf/httpd.conf69 #User apache70 #Group apache71 User cjl72 Group cjl Start Apache1systemctl enable --now httpd (Optional) Configure SMBWhen we want SMB to coexist with WebDAV. 12345678910111213141516171819vim /etc/samba/smb.conf[global]workgroup = WORKGROUPsecurity=usermap to guest =Bad User#添加名为share的共享文件夹[share]comment = share allpath = /sharebrowseable = yespublic = yeswritable = yescreate mode = 0744force create mode = 0744directory mode = 0744force directory mode = 0744force user = apache 1systemctl restart smb WebDAV ClientWindows111net use W: https://192.168.64.84:10443/share /user:cjh Passw0rd 注：此时该使用率为 C 盘使用率 ] 免密码登录 参考：https://httpd.apache.org/docs/2.4/mod/mod_dav.html 1234567891011121314151617vim /etc/httpd/conf.d/webdav.conf# create newDAVLockDB /var/lib/dav/lockdbAlias /share /share&lt;Directory &quot;/share&quot;&gt;Require all grantedDav OnAuthType BasicAuthName DAVAuthUserFile &quot;user.passwd&quot;&lt;LimitExcept GET POST OPTIONS&gt;Require user admin&lt;/LimitExcept&gt;&lt;/Directory&gt;","categories":[{"name":"File Sharing Servers","slug":"File-Sharing-Servers","permalink":"https://kenryu.cc/categories/File-Sharing-Servers/"}],"tags":[]},{"title":"SMART Monitoring Tools","slug":"Storage/SMART_Monitoring_Tools","date":"2021-12-11T03:09:02.000Z","updated":"2022-07-01T01:10:58.403Z","comments":true,"path":"2021/12/11/Storage/SMART_Monitoring_Tools/","link":"","permalink":"https://kenryu.cc/2021/12/11/Storage/SMART_Monitoring_Tools/","excerpt":"","text":"Objectives Self-Monitoring, Analysis and Reporting Technology. Logging SMART errors and changes via the SYSLOG interface. Send email warnings if problems are detected. Make HDD enclosure LED blinking. Descriptionssmartmontoolssmartctl controls the Self-Monitoring, Analysis and Reporting Technology (SMART) system built into most ATA&#x2F;SATA and SCSI&#x2F;SAS hard drives and solid-state drives. The purpose of SMART is to monitor the reliability of the hard drive and predict drive failures, and to carry out different types of drive self-tests. smartctl also supports some features not related to SMART. This version of smartctl is compatible with ACS-3, ACS-2, ATA8-ACS, ATA&#x2F;ATAPI-7 and earlier standards (see REFERENCES below). ledmonThe ledctl is an user space application designed to control LEDs associated with each slot in an enclosure or a drive bay. The LEDs of devices listed in list_of_devices are set to the given pattern pattern_name and all other LEDs are turned off. User must have root privileges to use this application. InstallationInstall SMART monitor tool and set it to start automatically when OS start-up. 12dnf -y install smartmontoolssystemctl enable --now ledmon.service Install LED’s controller tool and set it to start automatically when OS start-up. 12dnf -y install ledmonsystemctl enable --now smartd.service ConfigurationsmartmontoolsSend Error massege via SMTP 123vim /etc/smartmontools/smartd.conf# Specify SMTP server and accounds. Maintenance Note: Not recommented to use &#x2F;dev&#x2F;sdX to specify HDD. 12smartctl --scansmartctl /dev/sda -i The following example illustrates how to locate a single block device. 1ledctl locate=/dev/disk/by-id/wwn-0x5000039b0810bcd9 The following example illustrates how to turn Locate LED off for the same block device. ledctl locate_off=/dev/disk/by-id/wwn-0x5000039b0810bcd9","categories":[{"name":"Storage","slug":"Storage","permalink":"https://kenryu.cc/categories/Storage/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://kenryu.cc/tags/linux/"},{"name":"server","slug":"server","permalink":"https://kenryu.cc/tags/server/"},{"name":"storage","slug":"storage","permalink":"https://kenryu.cc/tags/storage/"}]},{"title":"Deploy Nginx, MySQL, PHP on Linux (LEMP/LNMP stack)","slug":"Linux/Deploy-Linux-Nginx-MySQL-PHP-Server","date":"2021-11-21T15:00:00.000Z","updated":"2022-06-30T00:45:55.810Z","comments":true,"path":"2021/11/22/Linux/Deploy-Linux-Nginx-MySQL-PHP-Server/","link":"","permalink":"https://kenryu.cc/2021/11/22/Linux/Deploy-Linux-Nginx-MySQL-PHP-Server/","excerpt":"","text":"Name Version Command Linux Rocky Linux release 8.5 (Green Obsidian) cat &#x2F;etc&#x2F;os-release &#x2F;etc&#x2F;redhat-release &#x2F;etc&#x2F;system-release Nginx nginx version: nginx&#x2F;1.20.2 nginx -v MySQL mysql Ver 8.0.28 for Linux on x86_64 (MySQL Community Server - GPL) mysql –version PHP PHP 7.4.29 (cli) (built: Apr 12 2022 10:55:38) ( NTS ) php -v 0. PreparationCheck if old packages have been installed. 1# rpm -qa | grep -E &quot;nginx|php|mariadb&quot; If they are installed, remove them. 123# yum remove -y &quot;nginx*&quot;# yum remove -y &quot;php*&quot;# yum remove -y &quot;mariadb*&quot; 1. Add repositories1.1 Add Nginx Official repositoryCreate and edit the following file. 1# vim /etc/yum.repos.d/nginx.repo 12345678[nginx]name=nginx stable repobaseurl=http://nginx.org/packages/centos/$releasever/$basearchgpgcheck=1enable=1gpgkey=https://nginx.org/keys/nginx_signing.keymodule_hotfixes=trueenabled=1 12# yum-config-manager --enable nginx# dnf config-manager --enable nginx 1.2 Add MySQL Official repositoriesDownload and install repositories form : MySQL Community Downloads 123# dnf -y install https://repo.mysql.com//mysql80-community-release-el8-3.noarch.rpm# dnf config-manager --enable mysql80-community# yum repolist all | grep mysql 1.3 Add PHP repositoryExecute the following commands in sequence to add and update epel repository. 12# dnf install -y https://rpms.remirepo.net/enterprise/remi-release-8.rpm# dnf module enable php:remi-7.4 -y 2. Installation2.1 Install Nginx12# dnf -y install nginx# nginx -v 2.2 Install MySQL123# yum module disable mysql -y# yum install mysql-community-server -y# mysql -V 2.3 Install PHP12# dnf install php php-curl php-dom php-exif php-fileinfo php-fpm php-gd php-hash php-json php-mbstring php-mysqli php-openssl php-pcre php-xml libsodium php-ldap php-pdo php-pear php-snmp php-xml -y# php -v 3. Configuration3.1 Configure Nginx1# systemctl enable --now nginx 12# mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak# vim default.conf 12345678910111213location / &#123;root /usr/share/nginx/html;- index index.html index.htm;+ index index.html index.htm index.php;&#125;location ~ .php$ &#123;root /usr/share/nginx/html;fastcgi_pass unix:/run/php-fpm/www.sock;fastcgi_index index.php;fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;include fastcgi_params;&#125;## Edit this file according to actual usage. 3.2 Configure MySQLStart and set enabled the MySQL server 1# systemctl enable --now mysqld A superuser account ‘root‘@’localhost’ is created. A password for the superuser is set and stored in the error log file. To reveal it, use the following command: 1# grep &#x27;temporary password&#x27; /var/log/mysqld.log 12# mysql -uroot -pmysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;Your_Password&#x27;; MySQL’s validate_password plugin is installed by default. This will require that passwords contain at least one uppercase letter, one lowercase letter, one digit, and one special character, and that the total password length is at least 8 characters. Reference siteA Quick Guide to Using the MySQL Yum Repository 3.3 Configure PHP1# vim /etc/php-fpm.d/www.conf 1234- user = apache+ user = nginx- group = apache+ group = nginx 1234# grep timezone /etc/php.ini; Defines the default timezone used by the date functions; http://php.net/date.timezonedate.timezone = Asia/Tokyo 1# systemctl enable --now php-fpm (Optional) Verify environment configurationExecute the following command to create test file. The root directory of the site that has been configured in /usr/share/nginx/html, This article uses thatdirectory as an example. 123# echo &quot;&lt;?php phpinfo(); ?&gt;&quot; &gt;&gt; /usr/share/nginx/html/index.php# nginx -t# nginx -s reload Modify the firewall policy to make the server can be accessed. 12# firewall-cmd --permanent --add-port=&#123;443/tcp,80/tcp&#125;# firewall-cmd --reload Access the following address in your browser.http://your_lnmp_server_iphttp://your_lnmp_server_ip/index.php If the results are displayed as above, the environment is successfully configured.","categories":[{"name":"Linux","slug":"Linux","permalink":"https://kenryu.cc/categories/Linux/"}],"tags":[{"name":"Server","slug":"Server","permalink":"https://kenryu.cc/tags/Server/"},{"name":"Nginx","slug":"Nginx","permalink":"https://kenryu.cc/tags/Nginx/"},{"name":"MySQL","slug":"MySQL","permalink":"https://kenryu.cc/tags/MySQL/"},{"name":"PHP","slug":"PHP","permalink":"https://kenryu.cc/tags/PHP/"}]},{"title":"搭建OpenVPN Over FRP","slug":"Network/搭建OpenVPN_Over_FRP","date":"2021-10-31T05:08:47.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2021/10/31/Network/搭建OpenVPN_Over_FRP/","link":"","permalink":"https://kenryu.cc/2021/10/31/Network/%E6%90%AD%E5%BB%BAOpenVPN_Over_FRP/","excerpt":"","text":"前言在学校或者公司外部的，或者出差在外地，想访问学校或者公司内网的服务器，但是没用网络管理员的权限，或者网络管理员不配合设定的情况下，如何突破NAT网络防火墙，达到访问内部网络。这是搭建这个服务的目的。 关于frp A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet. https://github.com/fatedier/frp 它是一个反向代理程序。它可以将借助存在于公网上的代理服务器，中继 NAT 和防火墙后面的服务，实现内网穿透（NAT Traversal、ファイアウォール透過＆貫通）的一种手段。 在接下来搭建好的Proxy服务器中，sockstat命令（摘录；考虑隐私公网IP随便写的）中可以了解到： 12345678910111213[2.5.2-RELEASE][root@Proxy]/root: sockstat | grep frp# 监听7000端口root frps 67615 3 tcp46 *:7000 *:*# 在内网的Proxy Server经过路由NAT转换之后的公网IP与Proxy Server进行了连接root frps 67615 11 tcp4 110.120.119.1:7000 119.120.110.1:61662# 监听6000端口（SSH服务）root frps 67615 10 tcp46 *:6000 *:*# 接受了客户端的连接root frps 67615 14 tcp4 110.120.119.1:6000 192.168.10.10:68623# 监听1194端口（OpenVPN服务）root frps 67615 9 tcp46 *:1194 *:* Client与Proxy建立连接，Reverse Proxy也与Proxy建立连接，通过这种围魏救赵的方式实现Client与Reverse Proxy建立连接。 以下是使用frp反向代理openvpn突破防火墙的一个demo。 0. demo环境 Host OS Service IP Allow Port (Inbound) Reverse Proxy Server CentOS Linux release 8.4.2105 frpc (frp_0.38.0_linux_amd64), openvpn P:172.16.10.10 (G:119.120.110.1) &#x2F; Proxy Server FreeBSD 12.2-STABLE frps (frp_0.38.0_freebsd_amd64) 110.120.119.1 #7000(from RPS) &amp; #6000(from client) &amp; #1194(from client) Client macOS openvpn-client 192.168.10.10 &#x2F; OS基本可以无视，因为不管是frp或者OpenVPN基本全平台适配 1. 部署Reverse Proxy Server在想要突破的内网环境（公司，学校）的机器上安装必要的frp，和其他服务这里用openvpn演示。防火墙策略允许outbound。 1.1 部署frpc目前可以在 Github 的 Release 页面中下载到最新版本的二进制文件。 https://github.com/fatedier/frp/releases/ 12wget https://github.com/fatedier/frp/releases/download/v0.38.0/frp_0.38.0_linux_amd64.tar.gz 1.1.1 解压安装包解压缩下载的压缩包， 放置在任意目录。 12tar -zxvf frp_0.38.0_linux_amd64.tar.gzcd frp_0.38.0_linux_amd64 这里（Reverse Proxy Server）上只用到frpc相关的文件，frps用不到。 1.1.2 配置以及启动服务12345678910[root@ServerC /]# cat frpc.ini[common]server_addr = 110.120.119.1 # Proxy Server的公网IPserver_port = 7000 # Proxy Server上的frps监听frpc连接的端口[ssh]type = tcplocal_ip = 127.0.0.1 # 指向本机IPlocal_port = 22 # 指向本机的SSH端口remote_port = 6000 # Proxy Server监听的端口。之后Client可以通过访问Proxy Server的6000端口，端口转发到上面的本机端口 通过 ./frpc -c ./frpc.ini &amp; 启动服务端。 1234[root@cjl-docker frp_0.37.1_linux_amd64]# ./frpc -c ./frpc.ini2021/08/25 00:00:40 [I] [service.go:304] [a0e6112664ab2527] login to server success, get run id [a0e6112664ab2527], server udp port [0]2021/08/25 00:00:40 [I] [proxy_manager.go:144] [a0e6112664ab2527] proxy added: [ssh]2021/08/25 00:00:40 [I] [control.go:180] [a0e6112664ab2527] [ssh] start proxy success 如果需要在后台长期运行，建议结合其他工具使用，例如 systemd 和 supervisor。 1.1.3 部署openvpn这里不做演示了，详细请参阅搭建openvpn教程。 如何在 CentOS 8 上设置和配置 OpenVPN 服务器 2. 搭建Proxy Server在用有公网IP的机器安装frps服务，设定好防火墙。这里用的是FreeBSD，公网IP为110.120.119.1，防火墙策略为：允许来自Reverse Proxy Server公网IP的连接，和允许来自Client的连接。 2.1 下载安装包目前可以在 Github 的 Release 页面中下载到最新版本的客户端和服务端二进制文件，所有文件被打包在一个压缩包中。 https://github.com/fatedier/frp/releases/tag/v0.37.1 1wget https://github.com/fatedier/frp/releases/download/v0.37.1/frp_0.37.1_linux_amd64.tar.gz 2.2 解压安装包解压缩下载的压缩包，放置在任意目录。 1tar -xzvf frp_0.37.1_linux_amd64.tar.gz Proxy只用到frps。 2.3 配置文件以及启动服务编写配置文件 1234cat frp_0.37.1_linux_amd64/frps.ini---[common]bind_port = 7000 通过 ./frps -c ./frps.ini &amp; 启动服务端，之后再通过 ss -ntul 查看是否开启监听7000端口。如果需要在后台长期运行，建议结合其他工具使用，例如 systemd 和 supervisor。 2.4 配置防火墙 策略1：让Proxy的7000端口暴露在公网上，才能让Reverse Proxy经行握手连接。 策略2：6000端口要暴露给Client。 具体设置的话要根据情况不同，如果Proxy或者Client也经过NAT，路由或者防火墙的话，除了本机防火之外，路由器的防火墙也要设定。 3. 测试以及使用3.1 开启服务后进行端口扫描：先开启frps，再开启frpc。当frpc连接上frps的时候，frps的6000号端口才会开启了监听。 方法1在线端口扫描https://www.cman.jp/network/support/go_port.cgi 方法2通过nmap工具端口扫描 12nmap -p 7000 110.120.119.1nmap -p 6000 110.120.119.1 3.2 开始使用Server A或者任意设备通过SSH访问Server B的6000端口，即可转发到Server C的22端口！ 1ssh 110.120.119.1 -p 6000 总结内网服务器上部署frpc服务（可以设置为systemctl开机自启），与reverse proxy服务器frps建立握手连接，通过SSH访问frps的端口转发，最终达到访问frpc所在服务器的目的。 参考","categories":[{"name":"Network","slug":"Network","permalink":"https://kenryu.cc/categories/Network/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://kenryu.cc/tags/linux/"},{"name":"network","slug":"network","permalink":"https://kenryu.cc/tags/network/"},{"name":"vpn","slug":"vpn","permalink":"https://kenryu.cc/tags/vpn/"}]},{"title":"SSL Certificates generation (On Linux use OpenSSL PKI)","slug":"Security/SSL_Certificates_generation__On_Linux_use_OpenSSL_PKI_","date":"2021-10-28T12:17:38.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2021/10/28/Security/SSL_Certificates_generation__On_Linux_use_OpenSSL_PKI_/","link":"","permalink":"https://kenryu.cc/2021/10/28/Security/SSL_Certificates_generation__On_Linux_use_OpenSSL_PKI_/","excerpt":"","text":"[toc] Introduction Definitons PKI: Public Key InfrastructureSecurity architecture where trust is conveyed through the signature of a trusted CA. CA: Certificate AuthorityEntity issuing certificates and CRLs. TLS: 传输层安全协议 Transport Layer Security的缩写 SSL: 安全套接字层 Secure Socket Layer的缩写 KEY: 通常指私钥Private key。 CSR: 证书签名请求Certificate Signing Request的缩写，可以简单理解成公钥，生成证书时要把这个提交给权威的证书颁发机构。 CRT: 证书Certificate的缩写 CRL: 证书吊销列表 Certificate Revocation Lists的缩写。 X.509: 是一种证书格式。对X.509证书来说，认证者总是CA或由CA指定的人，一份X.509证书是一些标准字段的集合，这些字段包含有关用户或设备及其相应公钥的信息。X.509的证书文件，一般以.crt结尾，根据该文件的内容编码格式，可以分为以下二种格式： t- PEM (Privacy Enhanced Mail)文本格式,以”—BEGIN—“开头, “—END—“结尾,内容是BASE64编码。Apache和Nginx服务器偏向于使用这种编码格式. t- DER (Distinguished Encoding Rules)二进制格式,不可读.Java和Windows服务器偏向于使用这种编码格式 OpenSSL 相当于SSL的一个实现，如果把SSL规范看成OO中的接口，那么OpenSSL则认为是接口的实现。接口规范本身是安全没问题的，但是具体实现可能会有不完善的地方，比如之前的”心脏出血”漏洞，就是OpenSSL中的一个bug. Prerequisites You have set up OpenSSL on your machine. You have established a process to sign trusted certificates. If you want to have the certificates signed by a certification authority, you have either established your own certification authority or you use an external certification authority. Alternatively, you can sign the generated certificate yourself. Procedure0. Edit OpenSSL conf file1234567891011121314151617181920212223242526272829303132333435363738394041424344cd /etc/pki/tls/cp openssl.cnf_org ca.confvim ca.conf[ ca ]default_ca = CA_default #56行、何も変わらなかった[ CA_default ]...x509_extensions = usr_cert #76行、何も変わらなかった...[ req ] #123行からdefault_bits = 2048# 125 default_md = sha256 #この行をコメントアウトdefault_keyfile = privkey.pemdistinguished_name = req_distinguished_nameattributes = req_attributesx509_extensions = v3_careq_extensions = v3_req #130この行を追記...[ usr_cert ]191 basicConstraints=CA:FALSE #コメントイン192 #basicConstraints=CA:TRUE #コメントアウトnsComment = &quot;OpenSSL Generated Certificate&quot; #212行、何も変わらなかったsubjectKeyIdentifier = hashauthorityKeyIdentifier=keyid,issuer:always #217行、最後の`:always`を追記subjectAltName = @alt_names #218行追記[ v3_req ]basicConstraints = CA:FALSE #244行、何も変わらなかったkeyUsage = nonRepudiation, digitalSignature, keyEncipherment #245行、何も変わらなかったsubjectAltName = @alt_names #246行、追記[alt_names] #このセクションは元々存在せず追記するものDNS.1 = example.comDNS.2 = *.example.comIP.1 = 192.168.0.1IP.2 = 192.168.0.2 CSRを作る際 1234567[req] req_extensions = v3_req↓[v3_req] subjectAltName = @alt_names↓[alt_names]DNS.1 = サーバのドメイン名IP.1 = サーバのIPアドレス といった流れで参照します。この設定ファイルを -config で指定して CSR を作ると、CSR に X509v3 Subject Alternative Name:エントリが入ります。 1. Generate Private Key &amp; CSR12345openssl req -new -newkey rsa:2048 -nodes -sha256 \\-subj &quot;/C=JP/ST=Saitama/L=Toda/O=Core Micro Systems, Inc./CN=cmsinc.co.jp/emailAddress=cjl@kensho.toda&quot; \\-config server.conf \\-keyout server.key \\-out server.csr View CSR details 1openssl req -noout -text -in /etc/pki/tls/server.csr 2. Signing Submit the CSR to the certification authority. Alternatively, sign the certificate yourself. 123456openssl ca -batch \\-keyfile /etc/pki/CA/private/cakey.pem \\-days 365 \\-config ca.conf \\-in server.csr \\-out server.crt View Certificate’s details 1openssl x509 -text -noout -in server.crt OtherFile Convert1. Certificate1openssl x509 -in kvm-bmc.crt -out kvm-bmc.pem 2. KeyPublic key or Private key 1openssl rsa -in kvm-bmc.key -out kvm-bmc-private.pem CAで発行したサーバ証明書を失効にする方法1openssl ca -revoke /etc/pki/CA/newcerts/xxx.pem #replacing the serial number Trouble ShootingReference OpenSSL Essentials: Working with SSL Certificates, Private Keys and CSRs Chrome58で、HTTPSの自己証明書がNET::ERR_CERT_COMMON_NAME_INVALID になる場合の対応 OpenSSL PKI Tutorial OpenSSL Certificate Manager","categories":[{"name":"Security","slug":"Security","permalink":"https://kenryu.cc/categories/Security/"}],"tags":[]},{"title":"Redmine搭建（PostgreSQL+Apache版）","slug":"Redmine/Redmine搭建（PostgreSQL+Apache版）","date":"2021-10-27T07:41:47.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2021/10/27/Redmine/Redmine搭建（PostgreSQL+Apache版）/","link":"","permalink":"https://kenryu.cc/2021/10/27/Redmine/Redmine%E6%90%AD%E5%BB%BA%EF%BC%88PostgreSQL+Apache%E7%89%88%EF%BC%89/","excerpt":"","text":"0. 环境说明Redmine需要的环境： 能运行Ruby的OS 数据库（MySQL &#x2F; PostgreSQL &#x2F; SQLite &#x2F; SQL服务器） 网站服务（Apache &#x2F; Nginx ） 本次搭建环境： Software Version Command OS CentOS Linux release 8.4.2105 cat &#x2F;etc&#x2F;os-release &#x2F;etc&#x2F;redhat-release &#x2F;etc&#x2F;system-release Redmine 4.2.3 Postgresql postgres (PostgreSQL) 10.17 postgres -V Ruby ruby 2.5.9p229 (2021-04-05 revision 67939) [x86_64-linux] ruby -v Apache Apache&#x2F;2.4.37 (centos) apachectl -v 1. 下载需要的软件包123dnf -y updatednf -y groupinstall &quot;Development Tools&quot;dnf -y install vim wget tar openssl* httpd httpd-devel ruby ruby-devel libcurl-devel 2. 安装数据库12dnf -y install postgresql-server postgresql-develrpm -qa | grep postgresql 初始化数据库 1postgresql-setup initdb 开机自动启动 12systemctl enable --now postgresqlsystemctl status postgresql 创建redmine用户以及redmine数据库 1234[root@localhost ~]# su - postgres[postgres@localhost ~]$ psqlCREATE ROLE redmine LOGIN ENCRYPTED PASSWORD &#x27;Your_Password&#x27; NOINHERIT VALID UNTIL &#x27;infinity&#x27;;CREATE DATABASE redmine WITH ENCODING=&#x27;UTF8&#x27; OWNER=redmine; 123\\du #查看用户\\l #查看数据库\\q #退出 编辑pg_hba.conf文件 12345vim /var/lib/pgsql/data/pg_hba.conf# configuration parameter, or via the -i or -h command line switches.host redmine redmine 127.0.0.1/32 md5host redmine redmine ::1/128 md5 注意：添加的规则放在73行的: configuration parameter…下面。否则会出现psql: FATAL: Ident authentication failed for user &quot;postgres&quot; 的错误而且无法访问数据库的问题。 重启数据库 1systemctl restart postgresql 验证看看能不能正常访问数据库 123psql -U redmine -d redmine -h 127.0.0.1Password for user redmine: #←正常情况下会提示输入密码 3. 关闭Selinux1234vim /etc/selinux/config#SELINUX=enforcingSELINUX=disabled 12rebootgetenforce # 确认结果 4. 下载安装Redmine 获取最新版本:Redmine官方下载地址 4.1. 下载以及解压123wget https://www.redmine.org/releases/redmine-4.2.3.tar.gztar -zxvf redmine-4.2.3.tar.gzmv redmine-4.2.3 /redmine 4.2. 配置database.yml文件根据数据库设置，配置Redmine的连接数据库设定文件 12345678910111213cd /redmine/config/cp database.yml.example database.ymlvim database.yml###postgresqlproduction:adapter: postgresqldatabase: redminehost: localhostusername: redminepassword: &quot;Your_Password&quot;encoding: utf8t#pool: 5 注意：要把development，test等区域给删了排版缩进要正确！ 4.3. 通过Ruby部署我对Ruby不了解，这些命令不是很懂，似乎可以自动导入 Redmine 操作所需的 Ruby 软件包，为 MySQL 数据库创建所需的表或加载默认数据？注意不能忘了，在执行操作前移动到Redmine目录。 12345678cd /redminegem install bundler --no-rdoc --no-rigem install bundlerbundle install --without development test rmagickbundle exec rake generate_secret_tokenRAILS_ENV=production bundle exec rake db:migrateRAILS_ENV=production bundle exec rake redmine:load_default_data 执行最后一行的时候选择想要的语言。 5. 配置Apache5.1. 安装passenger12gem install passengerpassenger-install-apache2-module --auto --languages ruby 有大量的日志在画面上滚动，需要花一点时间。虽然有很多警告，但是如果不因错误而掉落的话应该没什么问题。 5.2. 安装snippet123456[root@localhost redmine]# passenger-install-apache2-module --snippetLoadModule passenger_module /usr/local/share/gems/gems/passenger-6.0.11/buildout/apache2/mod_passenger.so&lt;IfModule mod_passenger.c&gt;PassengerRoot /usr/local/share/gems/gems/passenger-6.0.11PassengerDefaultRuby /usr/bin/ruby&lt;/IfModule&gt; 5.3. 设置Redmine为Apache的根目录，并把上一步5.2的结果复制下来粘贴到redmine.conf文件中123456789101112vim /etc/httpd/conf.d/redmine.conf&lt;Directory &quot;/redmine/public&quot;&gt;Require all granted&lt;/Directory&gt;LoadModule passenger_module /usr/local/share/gems/gems/passenger-6.0.11/buildout/apache2/mod_passenger.so&lt;IfModule mod_passenger.c&gt;PassengerRoot /usr/local/share/gems/gems/passenger-6.0.11PassengerDefaultRuby /usr/bin/ruby&lt;/IfModule&gt; 5.4.123vim /etc/httpd/conf/httpd.confDocumentRoot &quot;/redmine/public&quot; 5.5. 给Apache权限1chown -R apache:apache /redmine 5.6. 重启Apache123systemctl enable httpdsystemctl start httpd 6. 防火墙123firewall-cmd --zone=public --permanent --add-service=httpfirewall-cmd --zone=public --permanent --add-service=httpsfirewall-cmd --reload 7. 排错7.1. 删除PostgreSQL数据库以及用户1234[root@localhost ~]# su - postgres[postgres@localhost ~]$ psqldrop database redmine;drop role redmine; 123\\du #查看用户\\l #查看数据库\\q #退出 参考：Redmine官方安装教程CentOS8にRedmine4.1をインストールする如何在 CentOS 8 上安装 Postgresql","categories":[{"name":"Redmine","slug":"Redmine","permalink":"https://kenryu.cc/categories/Redmine/"}],"tags":[]},{"title":"Redmine搭建（MySQL+Apache版）","slug":"Redmine/Redmine搭建（MySQL_Apache版）","date":"2021-10-26T06:42:55.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2021/10/26/Redmine/Redmine搭建（MySQL_Apache版）/","link":"","permalink":"https://kenryu.cc/2021/10/26/Redmine/Redmine%E6%90%AD%E5%BB%BA%EF%BC%88MySQL_Apache%E7%89%88%EF%BC%89/","excerpt":"","text":"0. 环境说明Redmine需要的环境： 能运行Ruby的OS 数据库（MySQL &#x2F; PostgreSQL &#x2F; SQLite &#x2F; SQL服务器） 网站服务（Apache &#x2F; Nginx ） 本次搭建环境： Software Version Command OS CentOS Linux release 8.4.2105 cat &#x2F;etc&#x2F;os-release &#x2F;etc&#x2F;redhat-release &#x2F;etc&#x2F;system-release Redmine 4.2.3 MySQL Ver 14.14 Distrib 5.7.36, for Linux (x86_64) using EditLine wrapper mysql –version MySQL mysql Ver 8.0.26 for Linux on x86_64 (Source distribution) mysql –version Ruby ruby 2.5.9p229 (2021-04-05 revision 67939) [x86_64-linux] ruby -v Apache Apache&#x2F;2.4.37 (centos) apachectl -v 1. 下载需要的软件包123dnf -y updatednf -y groupinstall &quot;Development Tools&quot;dnf -y install vim wget tar openssl* httpd httpd-devel ruby ruby-devel libcurl-devel 2. 安装数据库（选项1）2.1. 安装最新版的Mysql数据库（8.0.26）1dnf -y install mysql-server mysql-devel （选项2）2.2. 安装旧版的Mysql数据库（5.7.36）123456789wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpmyum localinstall mysql57-community-release-el7-8.noarch.rpmyum repolist enabled | grep &quot;mysql.*-community.*&quot;yum module disable mysqlyum install mysql-community-server -ysystemctl enable mysqldsystemctl start mysqldsystemctl daemon-reload （选项3）2.3. 安装旧版的Mysql数据库（5.7.36）12wget http://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpmrpm -ivh mysql80-community-release-el7-3.noarch.rpm 指定版本 (5.7) 12cd /etc/yum.repos.d/vim mysql-community.repo 12yum -y module disable mysqlyum -y install mysql-community-server 确认 1mysql --version （选项4）2.4. 获取数据库初始密码（旧版数据库需要） 1grep &#x27;temporary password&#x27; /var/log/mysqld.log 2.5. 配置数据库初始化数据库，根据需求选择 Y &#x2F; N 1mysql_secure_installation 为Redmine创建数据库 123456mysql -uroot -pCREATE DATABASE redmine CHARACTER SET utf8mb4;set global validate_password.policy=0; #密码策略为0这一步可选CREATE USER &#x27;redmine&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;my_password&#x27;; #把&#x27;my_password&#x27;改为我们想要设定的密码GRANT ALL PRIVILEGES ON redmine.* TO &#x27;redmine&#x27;@&#x27;localhost&#x27;; 重启数据库 12systemctl enable mysqldsystemctl restart mysqld 3. 关闭Selinux1234vim /etc/selinux/config#SELINUX=enforcingSELINUX=disabled 12rebootgetenforce # 确认结果 4. 下载安装Redmine 获取最新版本:Redmine官方下载地址 4.1. 下载以及解压123wget https://www.redmine.org/releases/redmine-4.2.3.tar.gztar -zxvf redmine-4.2.3.tar.gzmv redmine-4.2.3 /redmine 4.2. 配置database.yml文件根据数据库设置，配置Redmine的连接数据库设定文件 12345678910111213cd /redmine/config/cp database.yml.example database.ymlvim database.ymlproduction:adapter: mysql2database: redminehost: localhostusername: redminepassword: &quot;my_password&quot;# Use &quot;utf8&quot; instead of &quot;utfmb4&quot; for MySQL prior to 5.7.7encoding: utf8mb4 注意：要把development，test等区域给删了排版缩进要正确！ 4.3. 通过Ruby部署我对Ruby不了解，这些命令不是很懂，似乎可以自动导入 Redmine 操作所需的 Ruby 软件包，为 MySQL 数据库创建所需的表或加载默认数据？注意不能忘了，在执行操作前移动到Redmine目录。 1234567cd /redminegem install bundlerbundle install --without development test rmagickbundle exec rake generate_secret_tokenRAILS_ENV=production bundle exec rake db:migrateRAILS_ENV=production bundle exec rake redmine:load_default_data 执行最后一行的时候选择想要的语言。 5. 配置Apache5.1. 安装passenger12gem install passengerpassenger-install-apache2-module --auto --languages ruby 有大量的日志在画面上滚动，需要花一点时间。虽然有很多警告，但是如果不因错误而掉落的话应该没什么问题。 5.2. 安装snippet123456[root@localhost redmine]# passenger-install-apache2-module --snippetLoadModule passenger_module /usr/local/share/gems/gems/passenger-6.0.11/buildout/apache2/mod_passenger.so&lt;IfModule mod_passenger.c&gt;PassengerRoot /usr/local/share/gems/gems/passenger-6.0.11PassengerDefaultRuby /usr/bin/ruby&lt;/IfModule&gt; 5.3. 设置Redmine为Apache的根目录，并把上一步5.2的结果复制下来粘贴到redmine.conf文件中123456789101112vim /etc/httpd/conf.d/redmine.conf&lt;Directory &quot;/redmine/public&quot;&gt;Require all granted&lt;/Directory&gt;LoadModule passenger_module /usr/local/share/gems/gems/passenger-6.0.11/buildout/apache2/mod_passenger.so&lt;IfModule mod_passenger.c&gt;PassengerRoot /usr/local/share/gems/gems/passenger-6.0.11PassengerDefaultRuby /usr/bin/ruby&lt;/IfModule&gt; 5.4.123vim /etc/httpd/conf/httpd.confDocumentRoot &quot;/redmine/public&quot; 5.5. 给Apache权限1chown -R apache:apache /redmine 5.6. 重启Apache123systemctl enable httpdsystemctl start httpd 6. 防火墙123firewall-cmd --zone=public --permanent --add-service=httpfirewall-cmd --zone=public --permanent --add-service=httpsfirewall-cmd --reload 7. 排错7.1. 删除Mysql数据库12dnf -y remove mysql mysql-server mysql-libs mysql-commonrm -rf /var/lib/mysql 参考：Redmine官方安装教程CentOS8にRedmine4.1をインストールする 12[root@localhost ~]# sudo su - postgres[postgres@localhost ~]$ psql CREATE ROLE redmine LOGIN ENCRYPTED PASSWORD &#39;Your_Password&#39; NOINHERIT VALID UNTIL &#39;infinity&#39;; CREATE DATABASE redmine WITH ENCODING=&#39;UTF8&#39; OWNER=redmine;","categories":[{"name":"Redmine","slug":"Redmine","permalink":"https://kenryu.cc/categories/Redmine/"}],"tags":[]},{"title":"PCI pass though (Ethernet port)","slug":"Virtualization/PCI_pass_though_(Ethernet_port)","date":"2021-08-26T06:51:28.000Z","updated":"2022-07-01T05:03:47.449Z","comments":true,"path":"2021/08/26/Virtualization/PCI_pass_though_(Ethernet_port)/","link":"","permalink":"https://kenryu.cc/2021/08/26/Virtualization/PCI_pass_though_(Ethernet_port)/","excerpt":"","text":"1ifconfig 1234567891011[root@SMC-KVM ~]# ethtool -i eno2driver: ixgbeversion: 4.18.0-305.10.2.el8_4.x86_64firmware-version: 0x800007f6, 1.1747.0expansion-rom-version:bus-info: 0000:01:00.1supports-statistics: yessupports-test: yessupports-eeprom-access: yessupports-register-dump: yessupports-priv-flags: yes 1234# vim /etc/grub2-efi.cfg# vim /etc/grub2.cfgset kernelopts=&quot;...iommu.passthrough=1&quot; Enable intel iommu: 1234vim /etc/default/grubGRUB_CMDLINE_LINUX=&quot;... intel_iommu=on iommu=pt#GRUB_CMDLINE_LINUX=&quot; ... amd_iommu=on If intel_iommu&#x3D;on or amd_iommu&#x3D;on works, you can try replacing them with iommu&#x3D;pt or amd_iommu&#x3D;pt. 123grub2-mkconfig -o /boot/grub2/grub.cfgcat /etc/grub2.cfg | grep &#x27;set kernelopt&#x27; # 这时候上面的设置已经被映射过来了reboot 1dmesg | grep IOMMU Modify VM’s specification: 12cp /etc/libvirt/qemu/cjl-test.xml /etc/libvirt/qemu/cjl-test.xml.bakvim /etc/libvirt/qemu/cjl-test.xml 1234567&lt;hostdev mode=&#x27;subsystem&#x27; type=&#x27;pci&#x27; managed=&#x27;yes&#x27;&gt;&lt;source&gt;&lt;address domain=&#x27;0x0000&#x27; bus=&#x27;0x01&#x27; slot=&#x27;0x00&#x27; function=&#x27;0x1&#x27;/&gt;&lt;/source&gt;##&lt;address type=&#x27;pci&#x27; domain=&#x27;0x0000&#x27; bus=&#x27;0x01&#x27; slot=&#x27;0x02&#x27; function=&#x27;0x0&#x27;/&gt;&lt;/hostdev&gt; 1virsh define &amp;VMname 12ethtool -i eno2ethtool -i eno1 Guest (VM) 12[root@localhost ~]# lspci | grep Ethernet00:02.0 Ethernet controller: Intel Corporation Ethernet Controller 10G X550T (rev 01) 1234567891011[root@localhost ~]# ethtool -i ens2driver: ixgbeversion: 4.18.0-305.10.2.el8_4.x86_64firmware-version: 0x800007f6, 1.1747.0expansion-rom-version:bus-info: 0000:00:02.0supports-statistics: yessupports-test: yessupports-eeprom-access: yessupports-register-dump: yessupports-priv-flags: yes","categories":[{"name":"Virtualization","slug":"Virtualization","permalink":"https://kenryu.cc/categories/Virtualization/"}],"tags":[{"name":"kvm","slug":"kvm","permalink":"https://kenryu.cc/tags/kvm/"},{"name":"hypervisor","slug":"hypervisor","permalink":"https://kenryu.cc/tags/hypervisor/"}]},{"title":"Setup NFS client (nfs-utils)","slug":"File_Sharing_Servers/Setup_NFS_client__nfs_utils_","date":"2021-05-11T06:01:24.000Z","updated":"2022-06-30T00:45:55.810Z","comments":true,"path":"2021/05/11/File_Sharing_Servers/Setup_NFS_client__nfs_utils_/","link":"","permalink":"https://kenryu.cc/2021/05/11/File_Sharing_Servers/Setup_NFS_client__nfs_utils_/","excerpt":"","text":"nfs客户端通过mount实现连接服务器 下载安装nfs-utils 1yum install nfs-utils 确认 123[root@client ~]# showmount -e 192.168.64.48Export list for 192.168.64.48:/tmp/nfs 192.168.64.0/22 挂载锚点 123mount -t nfs 192.168.64.48:/tmp/nfs /mntdf -hT Automatically mount by using autofs One drawback of using &#x2F;etc&#x2F;fstab is that, regardless of how infrequently a user accesses the NFS mounted file system, the system must dedicate resources to keep the mounted file system in place. This is not a problem with one or two mounts, but when the system is maintaining mounts to many systems at one time, overall system performance can be affected.https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/storage_administration_guide/nfs-autofs Step1. Install autofs 12dnf -y install autofssystemctl enable autofs Step2. Edit auto.master for direct mapping 123vim /etc/auto.master#/misc /etc/auto.misc/- /etc/auto.misc Step3. Edit auto.misc 12vim /etc/auto.misc/share -fstype=nfs4,rw 192.168.65.129:/share Step4. Restart autofs to apply the changes systemctl restart autofs","categories":[{"name":"File Sharing Servers","slug":"File-Sharing-Servers","permalink":"https://kenryu.cc/categories/File-Sharing-Servers/"}],"tags":[]},{"title":"Setup NFS server (nfs-utils)","slug":"File_Sharing_Servers/Setup_NFS_server__nfs_utils_","date":"2021-05-11T05:06:04.000Z","updated":"2022-06-30T00:45:55.810Z","comments":true,"path":"2021/05/11/File_Sharing_Servers/Setup_NFS_server__nfs_utils_/","link":"","permalink":"https://kenryu.cc/2021/05/11/File_Sharing_Servers/Setup_NFS_server__nfs_utils_/","excerpt":"","text":"Socket Statisticsの確認 1234[root@localhost html]# ss -ntulNetid State Recv-Q Send-Q Local Address:Port Peer Address:Porttcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:*tcp LISTEN 0 128 [::]:22 [::]:* 安装nfs-utils 1yum install nfs-utils 设置防火墙 123firewall-cmd --zone=public --permanent --add-service=&#123;rpc-bind,mountd,nfs&#125;firewall-cmd --reloadfirewall-cmd --list-all 设置开机自启 12systemctl enable rpcbindsystemctl enable nfs-server.service 设置配置文件 12[root@localhost nfs]# vi /etc/exports/tmp/nfs/ 192.168.64.0/22(rw,sync,no_root_squash,no_all_squash) 配置文件的参数 参数 作用 ro 只读 rw 读写 root_squash 当NFS客户端以root管理员访问时，映射为NFS服务器的匿名用户 no_root_squash 当NFS客户端以root管理员访问时，映射为NFS服务器的root管理员 all_squash 无论NFS客户端使用什么账户访问，均映射为NFS服务器的匿名用户 sync 同时将数据写入到内存与硬盘中，保证不丢失数据 async 优先将数据写入到内存，然后再写入硬盘；这样效率更高，但可能会丢失数据 anonuid 指定uid的值，此uid必须存在于&#x2F;etc&#x2F;passwd中 anongid 指定gid的值 启动nfs服务 1systemctl restart rpcbind nfs-server.service 确认 123456789101112[root@centos8 mnt]# ss -ntulNetid State Recv-Q Send-Q Local Address:Port Peer Address:Portudp UNCONN 0 0 0.0.0.0:111 0.0.0.0:*udp UNCONN 0 0 [::]:111 [::]:*tcp LISTEN 0 128 0.0.0.0:111 0.0.0.0:*tcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:*tcp LISTEN 0 128 [::]:111 [::]:*tcp LISTEN 0 128 [::]:22 [::]:*[root@localhost tmp]# showmount -e localhostExport list for localhost:/tmp/nfs 192.168.64.0/22","categories":[{"name":"File Sharing Servers","slug":"File-Sharing-Servers","permalink":"https://kenryu.cc/categories/File-Sharing-Servers/"}],"tags":[]},{"title":"Setup SMB server (samba)","slug":"File_Sharing_Servers/Setup_SMB_server__samba_","date":"2021-05-10T08:16:45.000Z","updated":"2022-06-30T00:45:55.810Z","comments":true,"path":"2021/05/10/File_Sharing_Servers/Setup_SMB_server__samba_/","link":"","permalink":"https://kenryu.cc/2021/05/10/File_Sharing_Servers/Setup_SMB_server__samba_/","excerpt":"","text":"Socket Statisticsの確認 1234[root@localhost html]# ss -ntulNetid State Recv-Q Send-Q Local Address:Port Peer Address:Porttcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:*tcp LISTEN 0 128 [::]:22 [::]:* smb serverをインストール、FWの設定 1234567891011121314151617yum install sambafirewall-cmd --zone=public --add-service=samba --permanentfirewall-cmd --reload[root@localhost ~]# firewall-cmd --list-allpublic (active)target: defaulticmp-block-inversion: nointerfaces: enp0s3sources:services: cockpit dhcpv6-client ftp http samba sshports:protocols:masquerade: noforward-ports:source-ports:icmp-blocks:rich rules: 修改配置文件 12cp /etc/samba/smb.conf /etc/samba/smb.conf.bak t#备份配置文件vim /etc/samba/smb.conftttt#编辑内容 vim编辑里面修改或者添加以下内容 1234567891011121314151617181920#修改global全局配置#samba4较之前的samba3有一个重大的变化是：security不再支持share[global]workgroup = WORKGROUPsecurity=usermap to guest =Bad Usertt#添加名为share的共享文件夹[share]comment = share allpath = /tmp/sambabrowseable = yespublic = yeswritable = yescreate mode = 0755force create mode = 0755directory mode = 0755force directory mode = 0755force user = apache 检测语法是否错误 123456[root@localhost ~]# testparmLoad smb config files from /etc/samba/smb.confLoaded services file OK.Server role: ROLE_STANDALONEPress enter to see a dump of your service definitions 创建一个共享文件夹 1234mkdir /tmp/sambachmod 777 /tmp/sambatouch /tmp/samba/sharefilesecho &quot;111111&quot; &gt; /tmp/samba/sharefiles 启动smb服务 1[root@localhost ~]# systemctl start smb 确认smb版本 1smbstatus --version 通过Socket Statistics可以看到139, 445端口已经被打开 12345678[root@localhost ~]# ss -tunlNetid State Recv-Q Send-Q Local Address:Port Peer Address:Porttcp LISTEN 0 50 0.0.0.0:139 0.0.0.0:*tcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:*tcp LISTEN 0 50 0.0.0.0:445 0.0.0.0:*tcp LISTEN 0 50 [::]:139 [::]:*tcp LISTEN 0 128 [::]:22 [::]:*tcp LISTEN 0 50 [::]:445 [::]:* 此时防火墙是打开的状态 1234567891011121314[root@localhost ~]# systemctl status firewalld● firewalld.service - firewalld - dynamic firewall daemonLoaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)Active: active (running) since Tue 2021-05-11 09:40:50 JST; 37min agoDocs: man:firewalld(1)Main PID: 857 (firewalld)Tasks: 2 (limit: 12404)Memory: 36.5MCGroup: /system.slice/firewalld.servicemq857 /usr/libexec/platform-python -s /usr/sbin/firewalld --nofork --nopidMay 11 09:40:49 localhost.localdomain systemd[1]: Starting firewalld - dynamic firewall daemon...May 11 09:40:50 localhost.localdomain systemd[1]: Started firewalld - dynamic firewall daemon.May 11 09:40:51 localhost.localdomain firewalld[857]: WARNING: AllowZoneDrifting is enabled. This is considered an insecure configuration option. It w&gt; 关于SELinux 123[root@localhost ~]# getenforceEnforcingttt#强制执行#这种状态不可访问 123[root@localhost ~]# getenforcePermissivettt#许可的#这种状态只有只读权限 123456789[root@localhost ~]# vim /etc/selinux/config#SELINUX=enforcingtt#强制执行SELINUX=disabledtt#关闭[root@localhost ~]# reboott#需要重启[root@localhost ~]# getenforcedisabled#这种状态只有只读权限 在win10下打开服务器地址","categories":[{"name":"File Sharing Servers","slug":"File-Sharing-Servers","permalink":"https://kenryu.cc/categories/File-Sharing-Servers/"}],"tags":[]},{"title":"Setup FTP server (vsftpd)","slug":"File_Sharing_Servers/Setup_FTP_server__vsftpd_","date":"2021-05-10T01:44:49.000Z","updated":"2022-06-30T00:45:55.810Z","comments":true,"path":"2021/05/10/File_Sharing_Servers/Setup_FTP_server__vsftpd_/","link":"","permalink":"https://kenryu.cc/2021/05/10/File_Sharing_Servers/Setup_FTP_server__vsftpd_/","excerpt":"","text":"Socket Statistics 1234[root@localhost html]# ss -ntulNetid State Recv-Q Send-Q Local Address:Port Peer Address:Porttcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:*tcp LISTEN 0 128 [::]:22 [::]:* FTP server pakege install 1yum install vsftpd -y FW setting 12firewall-cmd --zone=public --add-service=ftp --permanentfirewall-cmd --reload 必须设置selinux为关闭 临时设置（重启失效）123[root@centos8 ~]# setenforce 0[root@centos8 ~]# getenforcePermissive 永久设置123456[root@centos8 ~]# vim /etc/selinux/config#SELINUX=enforcingSELINUX=disabled[root@centos8 ~]# reboot[root@centos8 ~]# getenforceDisabled FTP的配置文件 12[root@localhost ~]# ls /etc/vsftpd/ftpusers user_list vsftpd.conf vsftpd_conf_migrate.sh 备份主配置文件 1cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak FTP可以有三种登入方式分别是： 匿名登录方式：不需要用户密码本地用户登入：使用本地用户和密码登入虚拟用户方式：也是使用用户和密码登入，但是该用户不是linux中创建的用户vsftpd.conf: 主配置文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192[root@centos8 ~]# vim /etc/vsftpd/vsftpd.confanonymous_enable=YEStt#允许匿名用户登陆anon_upload_enable=YES tt#匿名用户可以上传文件anon_mkdir_write_enable=YESt#匿名用户可以修改文件夹anon_other_write_enable=YESt#匿名用户可以修改文件夹no_anon_password=YEStt#匿名用户login时不询问口令anon_umask=011tt#匿名用户创建文件的掩码，不指定时候为077local_enable=YES #vsftpd所在系统的用户可以登录vsftpdwrite_enable=YES #全局设置，是否容许写入（无论是匿名用户还是本地用户，若要启用上传权限的话，就要开启他）local_umask=002 #匿名用户新增文件的umask数值xferlog_enable=YES #启用一个日志文件，用于详细记录上传和下载。use_localtime=YES #使用本地时间而不是GMTvsftpd_log_file=/var/log/vsftpd.log #vsftpd日志存放位置dual_log_enable=YES #用户登陆日志connect_from_port_20=YES #开启20端口xferlog_file=/var/log/xferlog #记录上传下载文件的日志xferlog_std_format=YES #记录日志使用标准格式idle_session_timeout=600 #登陆之后超时时间60秒，登陆之后，一分钟不操作，就会断开连接。chroot_local_user=YES #用于指定用户列表文件中的用户,是否允许切换到上级目录listen=YES #开启监听pam_service_name=vsftpd.vu #验证文件的名字userlist_enable=YES #允许由user_list指定文件中的用户登录FTP服务器tcp_wrappers=YES #支持tcp_wrappers,限制访问(/etc/hosts.allow,/etc/hosts.deny)guest_enable=YES #起用虚拟用户guest_username=taokey #虚拟用户名#user_config_dir=/etc/vsftpd/vsftpuser #虚拟用户配置文件路径local_root=/home/ftpUser/ #自定义ftp上传路径（注意文件夹权限）pasv_min_port=35000pasv_max_port=45000pasv_enable=YESpasv_promiscuous=YESanon_other_write_enable=YES## 1. 监听相关#listen=&lt;YES/NO&gt; # YES: 服务以独立运行方式运行; NO: 运行在 xinetd 内。 默认为 YESlisten_address=&lt;ip address&gt; # 服务监听地址, 如果有多个网卡, 需要将服务绑定到指定 IP 地址listen_port=&lt;port&gt; # 服务监听端口, 默认为 21## 2. 匿名用户相关#anonymous_enable=&lt;YES/NO&gt; # 是否允许匿名用户访问, 默认 NOno_anon_password=YES t # 匿名用户login时不询问口令anon_mkdir_write_enable=&lt;YES/NO&gt; # 是否允许匿名用户创建文件夹, 默认 NOanon_other_write_enable=&lt;YES/NO&gt; # 是否允许匿名用户重命名、删除文件夹等其他权限（默认为 NO, 基于安全性考虑这个权限一般不打开）anon_upload_enable=&lt;YES/NO&gt; # 是否允许匿名用户上传, 默认 NOanon_umask=&lt;nnn&gt; # 匿名用户上传的文件的生成掩码, 默认为077anon_max_rate=&lt;n&gt; # 匿名用户的最大传输速率, 单位为 Byte/s, 值为 0 表示不限制anon_world_readable_only=&lt;YES/NO&gt; # 是否允许匿名用户只读浏览## 3. 本地用户(Linux标准系统用户)相关#local_enable=&lt;YES/NO&gt; # 是否支持本地用户帐号访问write_enable=&lt;YES/NO&gt; # 是否开放本地用户的写权限local_umask=&lt;nnn&gt; # 本地用户上传的文件的生成掩码, 默认为077local_max_rate=&lt;n&gt; # 本地用户最大的传输速率, 单位为 Byte/s，值为 0 表示不限制local_root=&lt;file&gt; # 本地用户登陆后的目录，默认为 本地用户 的 主目录chroot_local_user=&lt;YES/NO&gt; # 本地用户是否可以执行 chroot, 默认为 NOchroot_list_enable=&lt;YES/NO&gt; # 是否只有指定的用户才能执行 chroot, 默认为 NOchroot_list_file=&lt;filename&gt; # 当 chroot_local_user=NO 且 chroot_list_enable=YES 时,# 只有 filename 文件内指定的用户（每行一个用户名）可以执行 chroot,# 默认值为 /etc/vsftpd.chroot_list## 4. 本地用户 黑/白名单管理#userlist_enable=&lt;YES/NO&gt; # 是否启用 userlist_file 用户列表, 默认为 YES，设置为NO的时候，并且用户名不在黑名单（user_list）可以登录，并查看ls ~中的文件userlist_deny=&lt;YES/NO&gt; # 当 userlist_enable=YES（即启用 userlist_file ）时, 则该字段才有效。# userlist_deny=YES: userlist_file 为 黑名单, 即在该文件内的用户均不可登录, 其他用户可以登录# userlist_deny=NO: userlist_file 为 白名单, 即在该文件内的用户才可以登录, 其他用户均不可登录userlist_file=&lt;filename&gt; # 黑/白名单用户列表文件（每行一个用户名）,# 是黑名单还是白名单, 根据 userlist_deny 的值决定,# 默认值为 /etc/vsftpd/user_list## 5. 连接相关#ftpd_banner=&lt;message&gt; # 客户端连接服务器后显示的欢迎信息connect_timeout=&lt;n&gt; # 远程客户端响应端口数据连接超时时间, 单位为秒, 默认 60accept_connection_timeout=&lt;n&gt; # 空闲的数据连接超时时间, 单位为秒, 默认 120data_connection_timeout=&lt;n&gt; # 空闲的用户会话超时时间, 单位为秒, 默认 300max_clients=&lt;n&gt; # 在独立模式运行时, 最大连接数, 0 表示无限制max_per_ip=&lt;n&gt; # 在独立模式运行时, 每 IP 的最大连接数, 0表示无限制 另外默认Vsftpd匿名用户有两个：anonymous、ftp，所以匿名用户如果需要上传文件、删除及修改等权限，需要ftp用户对&#x2F;var&#x2F;ftp&#x2F;pub目录有写入权限，使用如下chown和chmod任意一种即可，设置命令如下： 123chown -R ftp /var/ftp/pub/chgrp -R ftp /var/ftp/pub/chmod -R 766 /var/ftp/pub/ 确认端口开启状态 123456[root@localhost html]# systemctl start vsftpd[root@localhost html]# ss -ntulNetid State Recv-Q Send-Q Local Address:Port Peer Address:Porttcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:*tcp LISTEN 0 32 *:21 *:*tcp LISTEN 0 128 [::]:22 [::]:*","categories":[{"name":"File Sharing Servers","slug":"File-Sharing-Servers","permalink":"https://kenryu.cc/categories/File-Sharing-Servers/"}],"tags":[]},{"title":"暗号化技術","slug":"Security/暗号化技術","date":"2021-04-23T13:31:10.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2021/04/23/Security/暗号化技術/","link":"","permalink":"https://kenryu.cc/2021/04/23/Security/%E6%9A%97%E5%8F%B7%E5%8C%96%E6%8A%80%E8%A1%93/","excerpt":"","text":"共通鍵 一对能上锁并且解锁的钥匙 公開鍵 公开钥：谁都可以拥有，只能上锁🔒，不能开锁❌🔓 密钥：接收者自己1人拥有，能开锁🔓 发送者先得到接收者的公开钥 给内容上锁后发给接收者 接收者用自己的密钥开锁 混合式SSH修改公开钥匙MAC钥匙位置Offending RSA key /Users/cjl/.ssh/known_hosts 方法1删除本地的钥匙,并备份旧钥匙列表ssh-keygen -R 192.168.1.1 方法2手动删除本地的钥匙vi /Users/cjl/.ssh/known_hosts","categories":[{"name":"Security","slug":"Security","permalink":"https://kenryu.cc/categories/Security/"}],"tags":[{"name":"网络","slug":"网络","permalink":"https://kenryu.cc/tags/%E7%BD%91%E7%BB%9C/"},{"name":"技术","slug":"技术","permalink":"https://kenryu.cc/tags/%E6%8A%80%E6%9C%AF/"}]},{"title":"Linux edit Route Table","slug":"Linux/Linux_edit_Route_Table","date":"2021-04-22T08:21:42.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2021/04/22/Linux/Linux_edit_Route_Table/","link":"","permalink":"https://kenryu.cc/2021/04/22/Linux/Linux_edit_Route_Table/","excerpt":"","text":"View the current state of the routing tableOption 1ip route Option 2 minimal version need to install “net-tools” package dnf -y install net-tools type the following command and hit Enter: netstat -rn Option 3 minimal version need to install “net-tools” package type the following command and hit Enter: route Add a Static Route to the Linux Routing TableWhen the add or del options are used, route modifies the routing tables. Without these options, route displays the current contents of the routing tables. Option 1The target is a network route -p add -net network-address -gateway gateway-address Creates a route that must persist across system reboots. If you want the route to prevail only for the current session, do not use the -p option. Option 2The target is a host route -p add -host network-address -gateway gateway-address Remove a Static Route from the Linux Routing TableOption 1The target is a network route -p del -net network-address -gateway gateway-address Creates a route that must persist across system reboots. If you want the route to prevail only for the current session, do not use the -p option. Option 2The target is a host route -p del -host network-address -gateway gateway-address","categories":[{"name":"Linux","slug":"Linux","permalink":"https://kenryu.cc/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://kenryu.cc/tags/linux/"},{"name":"network","slug":"network","permalink":"https://kenryu.cc/tags/network/"},{"name":"server","slug":"server","permalink":"https://kenryu.cc/tags/server/"}]},{"title":"Used iSCSI to connect storage","slug":"File_Sharing_Servers/Used_iSCSI_to_connect_storage","date":"2021-04-19T01:52:38.000Z","updated":"2022-06-30T00:45:55.810Z","comments":true,"path":"2021/04/19/File_Sharing_Servers/Used_iSCSI_to_connect_storage/","link":"","permalink":"https://kenryu.cc/2021/04/19/File_Sharing_Servers/Used_iSCSI_to_connect_storage/","excerpt":"","text":"iSCSI Target Configuration:Step 0: Check the disk existslsblk Step 1:Prepare LVM12345678910[root@localhost ~]# vgcreate vgsan /dev/sdbPhysical volume &quot;/dev/sdb&quot; successfully createdVolume group &quot;vgsan&quot; successfully created[root@localhost ~]# lvcreate -n lvsan -l 100%VG /dev/vgsanLogical volume &quot;lvsan&quot; created.[root@localhost ~]# lvsLV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convertroot centos -wi-ao---- 6.67gswap centos -wi-ao---- 820.00mlvsan vgsan -wi-a----- 8.00g Step 2:Install softwareyum -y install targetcli Step 3:Enter the targetcli interfacetargetcli Step 3.1: Configure backstores/&gt; cd backstoresFirst thing is to configure a backstorage device from our previously configured lvm volume/backstores&gt; block/ create block1 /dev/vgsan/lvsan Step 3.2 :Configure IQNIQN is the unique identifier of each iSCSI-target. IQN follows strict naming convention. It is in iqn.YY-MM.[inverse-DNS]:[target name] format. We have to make to sure to follow this convention, otherwise iqn creation will fail. To create iqn, move to the iscsi section./backstores&gt; cd /iscsi/iscsi&gt; create iqn.2017-09.com.example:rock Step 3.3 : Create ACLCreate an ACL to allow “client1” to access this target/iscsi/iqn.20....example:rock&gt; tpg1/acls/ create iqn.2017-09.com.example:client1 Step 3.4 : Create LUN/iscsi/iqn.20....example:rock&gt; tpg1/luns/ create /backstores/block/block1Now we will go back to targetcli root to get a whole picture of what we created so far.This completes the iscsi setup. Enter the command “exit” to come out of the targetcli prompt. this also saves the configuration./&gt; exit Step 4: Service &amp; FW Configurationsystemctl start targetsystemctl enable targetfirewall-cmd --add-service=iscsi-target --zone=public --permanentfirewall-cmd --reload referenceshttps://rmahmood.tech/configuring-iscsi-on-centos-systems/ Initiator(Client) configuration:Step 0: Check the disk existsuse the “lsblk” command , so later we can see the differencelsblk Step 1: Install Softwareyum -y install iscsi-initiator-utils Step 2: Edit or View InitiatorNamevi /etc/iscsi/initiatorname.iscsirestart the iscsid service to configuration change to take effect.systemctl restart iscsid Step 3: Discover iscsi targetiscsiadm --mode discovery --type sendtargets --portal 192.168.1.56 Step 4: Log into the targetiscsiadm --mode node --targetname iqn.2017-09.com.example:rock --portal 192.168.1.56:3260 --login Logout Targetiscsiadm --mode node --targetname iqn.2017-09.com.example:rock --portal 192.168.1.56:3260 --logout Step 5: Specifically check the iscsi deviceslsblk reference","categories":[{"name":"File Sharing Servers","slug":"File-Sharing-Servers","permalink":"https://kenryu.cc/categories/File-Sharing-Servers/"}],"tags":[]},{"title":"Storage Benchmark (fio command)","slug":"Storage/Storage_Benchmark_(fio_command)","date":"2021-04-08T05:40:00.000Z","updated":"2022-07-01T01:10:58.403Z","comments":true,"path":"2021/04/08/Storage/Storage_Benchmark_(fio_command)/","link":"","permalink":"https://kenryu.cc/2021/04/08/Storage/Storage_Benchmark_(fio_command)/","excerpt":"","text":"123456789101112# 顺序写：fio -filename=/dev/md -direct=1 -iodepth 1 -thread -rw=write -ioengine=psync -bs=8M -size=60G -numjobs=64 -runtime=10 -group_reporting -name=file# 顺序读：fio -filename=/dev/md -direct=1 -iodepth 1 -thread -rw=read -ioengine=psync -bs=8M -size=60G -numjobs=64 -runtime=10 -group_reporting -name=file# 随机写：fio -filename=/dev/md -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=psync -bs=8M -size=60G -numjobs=64 -runtime=10 -group_reporting -name=file# 随机读：fio -filename=/dev/md -direct=1 -iodepth 1 -thread -rw=randread -ioengine=psync -bs=8M -size=60G -numjobs=64 -runtime=10 -group_reporting -name=file# 混合随机读写：fio -filename=/dev/md -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=30 -ioengine=psync -bs=8M -size=60G -numjobs=64 -runtime=10 -group_reporting -name=file -ioscheduler=noop# 当目标为Directory的时候fio -directory=/mnt/ -direct=1 -iodepth 1 -thread -rw=write -ioengine=psync -bs=8M -size=60G -numjobs=64 -runtime=10 -group_reporting -name=file 12345umount -l 10.0.1.2:/mnt/nas/nasmount -t nfs 10.0.1.2:/mnt/nas/nas /mntmount -t nfs -o nolock,timeo=15 10.0.1.2:/mnt/nas/nas /mntmount -t nfs 10.0.1.2:/mnt/nas/nas /mnt -o nolock, rsize=1024,wsize=1024,timeo=15mount -t nfs -o rsize=131072,wsize=131072 10.0.1.2:/mnt/nas/nas /mnt","categories":[{"name":"Storage","slug":"Storage","permalink":"https://kenryu.cc/categories/Storage/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://kenryu.cc/tags/linux/"},{"name":"server","slug":"server","permalink":"https://kenryu.cc/tags/server/"},{"name":"storage","slug":"storage","permalink":"https://kenryu.cc/tags/storage/"}]},{"title":"Binary Search","slug":"Sort-Algorithm/Binary-Search","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Binary-Search/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Binary-Search/","excerpt":"","text":"123456789101112131415161718#ifndef ALGORITHM_BINARY_SEARCH_METHOD_H#define ALGORITHM_BINARY_SEARCH_METHOD_H/* 二分探索 */int binary_search (int list[], int list_size, int x) &#123; int left, right, mid; left = 0; right = list_size - 1; while (left &lt;= right) &#123; mid = (left + right)/2; if (list[mid] == x) &#123; return mid; &#125; else if (list[mid] &lt; x) &#123; left = mid + 1; &#125; else &#123; right = mid - 1; &#125; &#125; return -1;&#125;#endif //ALGORITHM_BINARY_SEARCH_METHOD_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Bubble Sort","slug":"Sort-Algorithm/Bubble-Sort","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Bubble-Sort/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Bubble-Sort/","excerpt":"","text":"12345678910111213141516171819202122232425262728#ifndef ALGORITHM_BUBBLE_SORT_H#define ALGORITHM_BUBBLE_SORT_H/* バブルソート */void bubble_sort (int *array, int array_size) &#123; int i, j;// for (i = 0; i &lt; array_size - 1; i++)&#123;// for (j = array_size - 1; j &gt;= i + 1; j--)&#123; // 右から左に操作// if (array[j] &lt; array[j-1]) &#123;// swap(&amp;array[j], &amp;array[j-1]);// &#125;// &#125;// printf(&quot;step %2d: &quot;,i);// print_array(array,array_size);// &#125; for(i=0;i&lt;array_size-1;i++)&#123; for(j=0;j&lt;array_size-1-i;j++)&#123;//左から右に操作 if(array[j]&gt;array[j+1])&#123; swap(&amp;array[j],&amp;array[j+1]); &#125; &#125; printf(&quot;step %2d: &quot;,i+1); print_array(array,array_size); &#125;&#125;#endif //ALGORITHM_BUBBLE_SORT_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Function Head","slug":"Sort-Algorithm/Function-Head","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Function-Head/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Function-Head/","excerpt":"","text":"123456789101112131415161718192021#ifndef ALGORITHM_FUNCTION_H#define ALGORITHM_FUNCTION_H/* 値を交換する関数 */void swap (int *x, int *y) &#123; int temp; // 値を一時保存する変数 temp = *x; *x = *y; *y = temp;&#125;/*一次配列を出力する関数*/void print_array(int array[], int array_size)&#123; int i; for (i = 0; i &lt; array_size; i++) &#123; printf(&quot;%d &quot;, array[i]); &#125; printf(&quot;\\n&quot;);&#125;#endif //ALGORITHM_FUNCTION_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Global Head","slug":"Sort-Algorithm/Global-Head","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Global-Head/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Global-Head/","excerpt":"","text":"12345678910111213141516#ifndef ALGORITHM_GLOBAL_H#define ALGORITHM_GLOBAL_H#include&lt;stdio.h&gt;#include&quot;function.h&quot;#include&quot;selection_sort.h&quot;#include&quot;bubble_sort.h&quot;#include&quot;merge_sort.h&quot;#include&quot;insertion_sort.h&quot;#include&quot;shell_sort.h&quot;#include&quot;quick_sort.h&quot;#include&quot;heap_sort.h&quot;#include&quot;linear_search_method.h&quot;#include&quot;binary_search_method.h&quot;#include&quot;hash_table_search_method.h&quot;#endif //ALGORITHM_GLOBAL_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Heap Sort","slug":"Sort-Algorithm/Heap-Sort","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Heap-Sort/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Heap-Sort/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031#ifndef ALGORITHM_HEAP_SORT_H#define ALGORITHM_HEAP_SORT_H/* pushdown操作 */void pushdown (int array[], int first, int last) &#123; int parent = first; // 親 int child = 2*parent; // 左の子 while (child &lt;= last) &#123; if ((child &lt; last) &amp;&amp; (array[child] &lt; array[child+1])) &#123; child++; // 右の子の方が大きいとき、右の子を比較対象に設定 &#125; if (array[child] &lt;= array[parent]) &#123; break; &#125; // ヒープ済み swap(&amp;array[child], &amp;array[parent]); parent = child; child = 2* parent; &#125;&#125;/* ヒープソート */void heap_sort (int array[], int array_size) &#123; int i; for (i = array_size/2; i &gt;= 1; i--) &#123; pushdown(array, i, array_size); // 全体をヒープ化 &#125; for (i = array_size; i &gt;= 2; i--) &#123; swap(&amp;array[1], &amp;array[i]); // 最大のものを最後に pushdown(array, 1, i-1); // ヒープ再構築 &#125;&#125;#endif //ALGORITHM_HEAP_SORT_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Insertion Sort","slug":"Sort-Algorithm/Insertion-Sort","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Insertion-Sort/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Insertion-Sort/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435#ifndef ALGORITHM_INSERTION_SORT_H#define ALGORITHM_INSERTION_SORT_H/* 挿入ソート */void insertion_sort (int array[], int array_size) &#123; int i, j; for (i = 1; i &lt; array_size; i++) &#123; // 先頭から順にソート j = i; while ((j &gt; 0) &amp;&amp; (array[j-1] &gt; array[j])) &#123; //整列済みの場合は処理しない swap(&amp;array[j-1], &amp;array[j]); // 整列されていない要素を交換 j--; &#125; printf(&quot;step %2d: &quot;,i); print_array(array,array_size); &#125;&#125;//void insertion_sort (int array[], int array_size) &#123;// int i, j, k,l;// for(j=1;j&lt;array_size;j++)&#123;// for(i=0;i&lt;j;i++)&#123;// if(array[j]&lt;array[i])&#123;// k=array[j];// for(l=j;l&gt;i;l--)&#123;// array[l]=array[l-1];// &#125;// array[i]=k;// &#125;// &#125;// printf(&quot;step %2d: &quot;,j);// print_array(array,array_size);// &#125;//&#125;#endif //ALGORITHM_INSERTION_SORT_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Main.c","slug":"Sort-Algorithm/Main.c","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Main.c/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Main.c/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536#include&quot;global.h&quot;int main (void) &#123; int array[10] = &#123; 2, 1, 8, 5, 4, 7, 9, 0, 6, 3 &#125;; int array_size=sizeof(array) / sizeof(int); printf(&quot;step %2d: &quot;,0); print_array(array,array_size);// selection_sort(array, array_size);// bubble_sort(array, array_size);// merge_sort(array, 0, 9);// insertion_sort(array, array_size); shell_sort(array, array_size);// quick_sort(array, 0, 9);// heap_sort(array, 9); print_array(array,10); return 0;// int list[10] = &#123;0, 4, 9, 10, 13, 17, 25, 36, 37, 40&#125;;// int x;// int answer;//// printf(&quot;x?&gt; &quot;);// scanf(&quot;%d&quot;, &amp;x);//// answer = liner_search(list, 10, x);// answer = sorted_liner_search(list, 10, x);// answer = binary_search(list, 10, x);//// if (answer != -1) &#123;// printf(&quot;%d\\n&quot;, answer);// &#125;else&#123;// printf(&quot;not exist\\n&quot;);// &#125;&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Merge Sort","slug":"Sort-Algorithm/Merge-Sort","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Merge-Sort/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Merge-Sort/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041#ifndef ALGORITHM_MERGE_SORT_H#define ALGORITHM_MERGE_SORT_H/* マージソート */void merge_sort (int array[], int left, int right) &#123; int i, j, k, mid,l; int work[10]; // 作業用配列 if (left &lt; right) &#123; mid = (left + right)/2; // 真ん中のIndex merge_sort(array, left, mid); // 再帰関数による左を整列 merge_sort(array, mid+1, right); // 再帰関数による右を整列 for (i = mid; i &gt;= left; i--) &#123;// 左半分 work[i] = array[i]; &#125; for (j = mid+1; j &lt;= right; j++) &#123; work[right-(j-(mid+1))] = array[j]; // 右半分を逆順 &#125; i = left; j = right; for (k = left; k &lt;= right; k++) &#123; if (work[i] &lt; work[j]) &#123; array[k] = work[i++]; &#125;else&#123; array[k] = work[j--]; &#125; &#125; for (l = 0; l &lt;= right; l++) &#123; printf(&quot;%d &quot;, work[l]); if(l==mid)&#123; printf(&quot;| &quot;); &#125; &#125; printf(&quot;\\n&quot;); &#125;// printf(&quot;step %2d: &quot;,k);// print_array(array,10);&#125;#endif //ALGORITHM_MERGE_SORT_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Quick Sort","slug":"Sort-Algorithm/Quick-Sort","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Quick-Sort/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Quick-Sort/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940#ifndef ALGORITHM_QUICK_SORT_H#define ALGORITHM_QUICK_SORT_H/**** pivotを決め、* 全データをpivotを境目に振り分け、* pivotの添え字を返す***/int partition (int array[], int left, int right) &#123; int i, j, pivot; i = left; j = right + 1; pivot = left; // 先頭要素をpivotとする do &#123; do &#123; i++; &#125; while (array[i] &lt; array[pivot]); do &#123; j--; &#125; while (array[pivot] &lt; array[j]); // pivotより小さいものを左へ、大きいものを右へ if (i &lt; j) &#123; swap(&amp;array[i], &amp;array[j]); &#125; &#125; while (i &lt; j); swap(&amp;array[pivot], &amp;array[j]); //pivotを更新 return j;&#125;/* クイックソート */void quick_sort (int array[], int left, int right) &#123; int pivot; if (left &lt; right) &#123; pivot = partition(array, left, right); quick_sort(array, left, pivot-1); // pivotを境に再帰的にクイックソート quick_sort(array, pivot+1, right); &#125; print_array(array,10);&#125;#endif //ALGORITHM_QUICK_SORT_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Selection Sort","slug":"Sort-Algorithm/Selection-Sort","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Selection-Sort/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Selection-Sort/","excerpt":"","text":"123456789101112131415161718192021222324252627#ifndef ALGORITHM_SELECTION_SORT_H#define ALGORITHM_SELECTION_SORT_H/* 選択ソート * 最小値（または最大値）を見つけて、先頭に移動。2番目に小さい（または大きい）要素を見つけて、2番目に移動。 * これを 要素数-1番目 まで繰り返して、整列するアルゴリズム。 * 分かりやすいが、遅い。安定ではない。 * 比較回数=(n-1)+(n-2)+...+2+1=n(n-1)/2=O(n^2) * swap回数=n-1 */void selection_sort (int array[], int array_size) &#123; int i, j, min_index; for (i = 0; i &lt; array_size-1; i++) &#123; min_index = i; // 先頭要素が一番小さいとする for (j = i + 1; j &lt; array_size; j++) &#123; if (array[j] &lt; array[min_index]) &#123; min_index = j; &#125; // 値の比較、最小値の更新 &#125; swap(&amp;array[min_index], &amp;array[i]); // 最小値と先頭要素を交換 printf(&quot;step %2d: &quot;,i+1); print_array(array,array_size); &#125;&#125;#endif //ALGORITHM_SELECTION_SORT_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]},{"title":"Shell Sort","slug":"Sort-Algorithm/Shell-Sort","date":"2020-09-29T15:00:00.000Z","updated":"2022-06-30T00:45:55.820Z","comments":true,"path":"2020/09/30/Sort-Algorithm/Shell-Sort/","link":"","permalink":"https://kenryu.cc/2020/09/30/Sort-Algorithm/Shell-Sort/","excerpt":"","text":"123456789101112131415161718192021#ifndef ALGORITHM_SHELL_SORT_H#define ALGORITHM_SHELL_SORT_H/* シェルソート */void shell_sort (int array[], int array_size) &#123; int i, j, h; for (h = 1; h &lt;= array_size/9; h = 3*h + 1); // 間隔hを決める for ( ; h &gt; 0; h /= 3) &#123; // hを狭めていく /* 以下、挿入ソートとほぼ同じ */ for (i = h; i &lt; array_size; i++) &#123; j = i; while ((j &gt; h - 1) &amp;&amp; (array[j-h] &gt; array[j])) &#123; swap(&amp;array[j-h], &amp;array[j]); j -= h; &#125; &#125;// printf(&quot;step %2d: &quot;,h);// print_array(array,array_size); &#125;&#125;#endif //ALGORITHM_SHELL_SORT_H","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]}],"categories":[{"name":"Storage","slug":"Storage","permalink":"https://kenryu.cc/categories/Storage/"},{"name":"Linux","slug":"Linux","permalink":"https://kenryu.cc/categories/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://kenryu.cc/categories/Windows/"},{"name":"ZFS","slug":"ZFS","permalink":"https://kenryu.cc/categories/ZFS/"},{"name":"File Sharing Servers","slug":"File-Sharing-Servers","permalink":"https://kenryu.cc/categories/File-Sharing-Servers/"},{"name":"Network","slug":"Network","permalink":"https://kenryu.cc/categories/Network/"},{"name":"Security","slug":"Security","permalink":"https://kenryu.cc/categories/Security/"},{"name":"Redmine","slug":"Redmine","permalink":"https://kenryu.cc/categories/Redmine/"},{"name":"Virtualization","slug":"Virtualization","permalink":"https://kenryu.cc/categories/Virtualization/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/categories/Algorithm/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://kenryu.cc/tags/windows/"},{"name":"Server","slug":"Server","permalink":"https://kenryu.cc/tags/Server/"},{"name":"Nginx","slug":"Nginx","permalink":"https://kenryu.cc/tags/Nginx/"},{"name":"MySQL","slug":"MySQL","permalink":"https://kenryu.cc/tags/MySQL/"},{"name":"PHP","slug":"PHP","permalink":"https://kenryu.cc/tags/PHP/"},{"name":"ZFS","slug":"ZFS","permalink":"https://kenryu.cc/tags/ZFS/"},{"name":"Storage","slug":"Storage","permalink":"https://kenryu.cc/tags/Storage/"},{"name":"linux","slug":"linux","permalink":"https://kenryu.cc/tags/linux/"},{"name":"server","slug":"server","permalink":"https://kenryu.cc/tags/server/"},{"name":"storage","slug":"storage","permalink":"https://kenryu.cc/tags/storage/"},{"name":"network","slug":"network","permalink":"https://kenryu.cc/tags/network/"},{"name":"vpn","slug":"vpn","permalink":"https://kenryu.cc/tags/vpn/"},{"name":"kvm","slug":"kvm","permalink":"https://kenryu.cc/tags/kvm/"},{"name":"hypervisor","slug":"hypervisor","permalink":"https://kenryu.cc/tags/hypervisor/"},{"name":"网络","slug":"网络","permalink":"https://kenryu.cc/tags/%E7%BD%91%E7%BB%9C/"},{"name":"技术","slug":"技术","permalink":"https://kenryu.cc/tags/%E6%8A%80%E6%9C%AF/"},{"name":"C","slug":"C","permalink":"https://kenryu.cc/tags/C/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://kenryu.cc/tags/Algorithm/"},{"name":"FE","slug":"FE","permalink":"https://kenryu.cc/tags/FE/"}]}